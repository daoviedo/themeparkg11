{"version":3,"sources":["pages/images/test1.jpg","pages/images/test2.jpg","pages/components/UserBar.js","pages/components/TopBar.js","pages/Home.js","pages/components/TicketInfo.js","pages/components/PaymentInfo.js","pages/components/Review.js","pages/Ticket.js","pages/components/RideGrid.js","pages/Riding.js","pages/components/StandMenu.js","pages/components/Concession.js","pages/Dining.js","pages/EntranceScan.js","pages/ScanRides.js","pages/components/MaintenanceDialogue.js","pages/components/MaintDesc.js","pages/Maintenance.js","pages/CreateRide.js","pages/components/AddEmployeeDialogue.js","pages/Department.js","pages/Login.js","pages/Analytics.js","pages/AccountSettings.js","pages/components/RideStatus.js","pages/components/SalesReport.js","pages/components/BetweenReport.js","pages/ParkReport.js","pages/components/DeleteItemDialog.js","pages/components/AddStandDialog.js","pages/components/AddItemDialog.js","pages/components/DeleteStand.js","pages/components/EditStandMenu.js","pages/components/StandSettings.js","pages/ManageStands.js","pages/ChangePassword.js","pages/MaintenanceReports.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","UserBar","props","isManager","depID","console","log","react_default","a","createElement","Fragment","index_es","onClick","openMenu","style","textTransform","outline","border","color","marginTop","AccountBox_default","anchor","open","openUserMenu","onClose","closeMenu","react_router_dom","to","textDecoration","button","Home_default","primary","ConfirmationNumber_default","LocalPlay_default","Warning_default","AssignmentLate_default","Equalizer_default","Assignment_default","Work_default","Fastfood_default","AirlineSeatReclineNormal_default","Settings_default","logOff","ExitToApp_default","TopBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","userID","localStorage","getItem","clear","setState","_this2","loggedIn","Navbar","id","variant","expand","backgroundColor","Brand","textAlign","href","Toggle","aria-controls","Collapse","Nav","className","margin","paddingTop","Link","components_UserBar","Component","Home","components_TopBar","src","Image1","alt","Image2","TealTheme","createMuiTheme","palette","main","purple","overrides","MuiPickersDay","day","isSelected","current","MuiPickersModal","dialogAction","TicketInfo","minimum","Date","Typography_default","gutterBottom","marginBottom","TextField_default","required","value","val","numTickets","onChange","e","handleChange","target","label","type","helperText","inputProps","maxLength","core_styles","theme","material_ui_pickers_esm","utils","DateFnsUtils","minDate","entryDate","handleChangedate","handleRainOut","email","PaymentInfo","Grid_default","container","spacing","item","xs","md","nameOnCard","fullWidth","cardNumber","cardExpiration","cardCVV","withStyles","listItem","padding","concat","unit","total","fontWeight","title","classes","payments","name","detail","substring","length","tprice","tax","Math","ceil","totalprice","products","desc","price","toFixed","List_default","disablePadding","map","product","ListItem_default","key","ListItemText_default","secondary","sm","direction","payment","purpleTheme","steps","Ticket","activeStep","ticket_ids","rainout","cancelled","defineProperty","LoadingDate1","getFullYear","fixMonth","getDate","_this$setState3","nd","handleNext","handleBack","addTickets","LoadingDate","fetch","method","headers","Content-Type","body","JSON","stringify","numberOfTickets","then","res","json","result","results","catch","err","fetchRainout","step","components_TicketInfo","components_PaymentInfo","components_Review","Error","rainedOut","date","getMonth","Error_default","countval","CssBaseline_default","layout","Paper_default","paper","align","Stepper_default","stepper","Step_default","StepLabel_default","maxHeight","overflowY","_ref","Ticket_ID","getStepContent","buttons","Button_default","disabled","validateInput","width","marginLeft","marginRight","breakpoints","up","grow","flexGrow","display","justifyContent","root","flexWrap","gridList","icon","GridList_default","cellHeight","list","tile","GridListTile_default","RideID","Stand_Name","NeedMaintenance","GridListTileBar_default","RideName","actionIcon","IconButton_default","Info_default","Rides","rideList","RideGrid","Transition","Slide_default","assign","StandMenu","stand","items","renderItems","Item_ID","Item_Name","Item_Price","component","scope","handleClickOpen","_","fetchmenu","handleClose","Stand_ID","itemList","opacity","Dialog_default","TransitionComponent","scroll","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","Hours_of_operations","height","DialogActions_default","React","subtitle","Dining","concessionList","diningList","Concession","EntranceScan","inputScan","output","timer","scanTicket","ticketID","status","openWindow","Done_default","_this3","setTimeout","paddingBottom","lineHeight","paddingRight","size","returnOut","outputRainout","ScanRides","listOfRides","selectedRide","event","rideID","fetchRideList","fetchRainOut","_this4","select","option","MaintenanceDialogue","openDialogue","keepMounted","aria-describedby","multiline","rows","description","submitForm","MaintDesc","rightDialogue","handleRightClose","dialogueDesc","Maintenance","maintList","handleRightOpen","employeeID","fetchMaintenance","renderMainList","OrderID","DateCreated","FirstName","LastName","Maintenance_Desc","split","es_Button","completeOrder","fetchRides","mainList","_this5","order_id","_this6","orderID","completedBy","_this7","rainoutPark","table","header","components_MaintenanceDialogue","components_MaintDesc","rainButton","overflowX","minWidth","position","top","&:hover","CreateRide","runsBeforeMaintenance","numSeats","rideName","textField","createRide","dense","menu","AddEmployeeDialogue","dialogueDept","deptList","DeptID","Name","firstname","lastname","Department","empList","selectedDept","handleChangeDept","fetchEmployees","dept","EmployeeID","MFirstName","MLastName","ManagerID","fixManager","fetchDepartments","dList","eid","mid","Mfn","Mln","components_AddEmployeeDialogue","Login","UserID","username","Password","departmentID","depLoaded","handleUserID","text","handlePassword","setItem","password","undefined","getDepartmentID","window","location","replace","FormControl_default","InputLabel_default","htmlFor","Input_default","autoComplete","autoFocus","Analytics","data","ridedata","dataVal","yearList","monthList","selectedyear","selectedmonth","fetchYearInfo","fetchMonthInfo","fetchMonthList","handleChangemon","fetchDayInfo","fetchYearList","fetchPivot","year","month","years","_this8","es6","left","right","strokeDasharray","dataKey","fill","AccountSettings","fName","lName","depoName","NewPassword","CheckPassword","correctpass","handleChangedPassword","fontSize","RideStatus","statusData","totalRevenue","renderRideStatus","Tooltip_default","icons_index_es","bottom","fontFamily","centerIcon","verticalAlign","SalesReport","renderSales","dayname","tickets_sold","random","header2","BetweenReport","rideData","ticketData","maintData","rainData","from","renderTicketData","renderRainoutData","_ref2","rainoutDate","renderMaintData","_ref3","OrderCount","renderRideData","_ref4","RideCounts","fromDate","toDate","ridesBetween","ticketsBetween","maintBetween","rainBetween","fetchRainInfo","fetchMaintInfo","fetchTicketInfo","fetchRideInfo","buttonSubmit","background","table1","Report","components_RideStatus","components_SalesReport","components_BetweenReport","DeleteItemDialog","openDeleteItem","close","justify","confirm","AddStandDialogue","Fab_default","aria-label","Add_default","openAddStand","handleCloseAddStand","standname","hours","submitStand","AddItemDialog","openAddItem","handleCloseAddItem","itemname","submitItem","openDeleteStand","closeDelete","EditStandMenu","remselect","addselect","handleClickAdd","additems","handleClickRemove","remitems","handleClickMenu","selectedIndex","indexOf","newSelected","slice","handleClickOther","isSelectedMenu","isSelectedOther","openEditMenu","maxWidth","hover","role","aria-checked","tabIndex","selected","Checkbox_default","checked","alignItems","ArrowBackIos_default","ArrowForwardIos_default","other","tableWrapper","StandSettings","addToMenu","sid","fetchother","removeFromMenu","handleOpenEditMenu","handleCloseEditMenu","secondaryHeading","openDelete","components_EditStandMenu","heading","typography","pxToRem","flexBasis","flexShrink","ManageStands","clist","fetchitems","fetchstands","handleDeleteStand","handleCloseDeleteStand","handleDeleteItem","itemid","handleCloseDeleteItem","handleOpenAddItem","handleOpenAddStand","handleOpenDeleteStand","standv","handleOpenDeleteItem","itemv","renderclist","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","components_StandSettings","Delete_default","AddStandDialog","components_DeleteItemDialog","DeleteStand","components_AddItemDialog","ChangePassword","handleNewPassword","handleCheckPassword","newPassword","handlecomparePassword","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","max","count","rowsPerPage","_this$props","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","TablePaginationActionsWrapped","withTheme","MaintenanceReports","mList","fetchmaintenance","clearDates","handleChangeDate","handleChangePage","handleChangeRowsPerPage","fetchrides","t","f","tdate","fdate","fixDate","rideid","maintlist","DateCompleted","issuedByF","issuedByL","completedByF","completedByL","_this$state","renderlist","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","onChangeRowsPerPage","ActionsComponent","App","react_router","path","exact","extact","ParkReport","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37b81d0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test1.950eb119.jpg\";","module.exports = __webpack_public_path__ + \"static/media/test2.fdf1b8b7.jpg\";","import React from 'react';\r\nimport AccIcon from '@material-ui/icons/AccountBox';\r\nimport Settings from '@material-ui/icons/Settings';\r\nimport Warning from '@material-ui/icons/Warning';\r\nimport Exit from '@material-ui/icons/ExitToApp';\r\nimport HomeLogo from '@material-ui/icons/Home';\r\nimport EntLogo from '@material-ui/icons/ConfirmationNumber';\r\nimport RideLogo from '@material-ui/icons/LocalPlay';\r\nimport Dept from '@material-ui/icons/Work';\r\nimport AnalyticsLogo from '@material-ui/icons/Equalizer';\r\nimport AssignLogo from '@material-ui/icons/Assignment';\r\nimport FoodLogo from '@material-ui/icons/Fastfood';\r\nimport NewRideLogo from '@material-ui/icons/AirlineSeatReclineNormal';\r\nimport MainHist from '@material-ui/icons/AssignmentLate';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Drawer, List, ListItem, ListItemText, Divider, IconButton} from \"@material-ui/core\";\r\n\r\nfunction UserBar(props) {\r\n    const isManager = props.isManager ==='true';\r\n    const depID = props.depID;\r\n    console.log(depID)\r\n    return (\r\n        <React.Fragment>\r\n        <IconButton onClick={props.openMenu} style={{textTransform: 'none', outline: 0, border: 'none', color: 'white', marginTop: -3}}>\r\n                  <AccIcon/>\r\n        </IconButton>\r\n        <Drawer anchor=\"right\" open={props.openUserMenu} onClose={props.closeMenu}>\r\n            <div onClick={props.closeMenu}>\r\n                <List>\r\n                    <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button>\r\n                            <HomeLogo style={{ color: \"#2A2A31\" }}/>\r\n                            <ListItemText primary='Home' />\r\n                        </ListItem>\r\n                    </Link>\r\n                </List>\r\n                <Divider />\r\n                {depID === '0001' || isManager ? (<List>\r\n                    <Link to=\"/entrance-scan\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button>\r\n                            <EntLogo style={{ color: \"#2A2A31\" }}/>\r\n                            <ListItemText primary='Park Entrance Scan' />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to=\"/scan-rides\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button>\r\n                            <RideLogo style={{ color: \"#2A2A31\" }}/>\r\n                            <ListItemText primary='Ride Ticken Scan' />\r\n                        </ListItem>\r\n                    </Link>\r\n                <Divider />\r\n                </List>) : (<div/>)}\r\n\r\n                {depID === '0003' || isManager ? (<List>\r\n                    <Link to=\"/maintenance\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button>\r\n                            <Warning style={{ color: \"#2A2A31\" }}/>\r\n                            <ListItemText primary='Park Maintenance' />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to=\"/maintenancereports\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button>\r\n                            <MainHist style={{ color: \"#2A2A31\" }}/>\r\n                            <ListItemText primary='Maintenance History' />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Divider/>\r\n                </List>) : (<div/>) }\r\n                \r\n                {isManager ? (<List>\r\n                    <Link to=\"/analytics\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button>\r\n                            <AnalyticsLogo style={{ color: \"#2A2A31\" }}/>\r\n                            <ListItemText primary='Analytics' />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to=\"/parkreport\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button>\r\n                            <AssignLogo style={{ color: \"#2A2A31\" }}/>\r\n                            <ListItemText primary='Reports' />\r\n                        </ListItem>\r\n                    </Link>\r\n                    {isManager ? (<Link to=\"/department\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button>\r\n                            <Dept style={{ color: \"#2A2A31\" }}/>\r\n                            <ListItemText primary='Department' />\r\n                        </ListItem>\r\n                    </Link>):(<div/>)}\r\n                <Divider />\r\n                </List>) : (<div/>)}\r\n                \r\n                {depID === '0002' || isManager ? (<List>\r\n                    <Link to=\"/manage-stands\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button>\r\n                            <FoodLogo style={{ color: \"#2A2A31\" }}/>\r\n                            <ListItemText primary='Manage Concessions' />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to=\"/new-ride\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button>\r\n                            <NewRideLogo style={{ color: \"#2A2A31\" }}/>\r\n                            <ListItemText primary='Create Ride' />\r\n                        </ListItem>\r\n                    </Link>\r\n                <Divider />\r\n                </List>) : (<div/>)}\r\n                \r\n                <List>\r\n                <Link to=\"/AccountSettings\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button>\r\n                            <Settings style={{ color: \"#2A2A31\" }}/>\r\n                            <ListItemText primary='Account Settings' />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button onClick={props.logOff}>\r\n                            <Exit style={{ color: \"#2A2A31\" }}/>\r\n                            <ListItemText primary='Log out' />\r\n                        </ListItem>\r\n                    </Link>\r\n                </List>\r\n            </div>\r\n        </Drawer>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default UserBar;","import React, { Component } from 'react';\r\nimport { Navbar, Nav} from 'react-bootstrap';\r\nimport '../css/TopBar.css';\r\nimport UserBar from './UserBar';\r\n\r\nclass TopBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userID: localStorage.getItem('userID'),\r\n            depID: localStorage.getItem('departmentID'),\r\n            isManager: localStorage.getItem('isManager'),\r\n            openUserMenu: false\r\n        }\r\n    }\r\n\r\n    logOff(){\r\n        localStorage.clear();\r\n        this.setState({userID: null});\r\n    }\r\n\r\n    render() {\r\n        const loggedIn = !(this.state.userID === null);\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar id=\"navHelper\" variant=\"dark\" expand=\"lg\" style={{backgroundColor: \"#2A2A31\"}}>\r\n                        <Navbar.Brand id=\"brandDisappear\" style={{textAlign: \"center\"}} href=\"/\">ThemePark</Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\" style={{margin: \"0 auto\", paddingTop: \"0.3125rem\"}}>\r\n                                <Nav.Link className=\"brandStyle\" href=\"/\">Theme Park</Nav.Link>\r\n                                <Nav.Link href=\"/park-tickets\">Buy Tickets</Nav.Link>\r\n                                <Nav.Link href=\"/rides\" >Rides</Nav.Link>\r\n                                <Nav.Link href=\"/dining\">Dining</Nav.Link>\r\n                                {loggedIn ? <UserBar isManager={this.state.isManager} depID={this.state.depID} openUserMenu={this.state.openUserMenu} openMenu={() => this.setState({openUserMenu: true})} closeMenu={() => this.setState({openUserMenu: false})} logOff={() => this.logOff()}/> : <Nav.Link href=\"/login\">Login</Nav.Link>}\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopBar;","import React, { Component } from 'react';\r\nimport TopBar from './components/TopBar';\r\nimport Image1 from './images/test1.jpg';\r\nimport Image2 from './images/test2.jpg';\r\nimport './css/main.css';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                \r\n\t\t\t<header>\r\n\t\t\t\t<TopBar/>\r\n\t\t\t</header>\r\n\r\n\t\t\t<section id=\"banner\">\r\n\t\t\t\t<div className=\"inner\">\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t\t<h1>Welcome to ThemePark G11</h1>\r\n\t\t\t\t\t</header>\r\n\r\n\t\t\t\t\t<div className=\"flex\">\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span className=\"icon fa-users\"></span>\r\n\t\t\t\t\t\t\t<h3>Family</h3>\r\n\t\t\t\t\t\t\t<p>Experience it with the ones<br/>you love most</p>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span className=\"icon fa-rocket\"></span>\r\n\t\t\t\t\t\t\t<h3>Entertainment</h3>\r\n\t\t\t\t\t\t\t<p>Enjoy unlimited rides<br/>and entertainment</p>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span className=\"icon fa-cutlery\"></span>\r\n\t\t\t\t\t\t\t<h3>Dining</h3>\r\n\t\t\t\t\t\t\t<p>Dine at our famous season<br/>choices and concessions</p>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<footer>\r\n\t\t\t\t\t\t<a href=\"/park-tickets\" className=\"button\">Buy Tickets</a>\r\n\t\t\t\t\t</footer>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\r\n\r\n\t\r\n\t\t\t<section id=\"three\" className=\"wrapper align-center\">\r\n\t\t\t\t<div className=\"inner\">\r\n\t\t\t\t\t<div className=\"flex flex-2\">\r\n\t\t\t\t\t\t<article>\r\n\t\t\t\t\t\t\t<div className=\"image round\">\r\n\t\t\t\t\t\t\t\t<img src={Image1} alt=\"Pic 01\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<header>\r\n\t\t\t\t\t\t\t\t<h3>Rides and Entertainment</h3>\r\n\t\t\t\t\t\t\t</header>\r\n\t\t\t\t\t\t\t<p>Make sure to visit all of our available rides!<br />You can see a list of available rides and<br />entertainment by clicking below.</p>\r\n\t\t\t\t\t\t\t<footer>\r\n\t\t\t\t\t\t\t\t<a href=\"/rides\" className=\"button\">View Rides</a>\r\n\t\t\t\t\t\t\t</footer>\r\n\t\t\t\t\t\t</article>\r\n\t\t\t\t\t\t<article>\r\n\t\t\t\t\t\t\t<div className=\"image round\">\r\n\t\t\t\t\t\t\t\t<img src={Image2} alt=\"Pic 02\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<header>\r\n\t\t\t\t\t\t\t\t<h3>Restaurants and Concessions</h3>\r\n\t\t\t\t\t\t\t</header>\r\n\t\t\t\t\t\t\t<p>Choose from our top-rated restaurants like<br />Pizza Palace, or grab a snack at any<br />nearby concession stand!</p>\r\n\t\t\t\t\t\t\t<footer>\r\n\t\t\t\t\t\t\t\t<a href=\"/dining\" className=\"button\">View Diners</a>\r\n\t\t\t\t\t\t\t</footer>\r\n\t\t\t\t\t\t</article>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\r\n\t\t\r\n\t\t\t<footer id=\"footer\">\r\n\t\t\t\t<div className=\"inner\">\r\n\t\t\t\t\t<div className=\"copyright\">\r\n\t\t\t\t\t\t<a href=\"#c\">&copy; ThemeParkG11. Created By: Daniel Oviedo | Ricardo Useche | Nic Graves | Kelsey Hedges</a>.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst TealTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {main: purple[900]},\r\n    },\r\n    overrides: {\r\n        MuiPickersDay: {\r\n          day: {\r\n            color: purple[900],\r\n          },\r\n          isSelected: {\r\n            backgroundColor: purple[\"900\"],\r\n          },\r\n          current: {\r\n            color: purple[\"900\"],\r\n          },\r\n        },\r\n        MuiPickersModal: {\r\n          dialogAction: {\r\n            color: purple[\"900\"],\r\n          },\r\n        },\r\n      },\r\n});\r\n\r\nfunction TicketInfo(props) {\r\n    var minimum=new Date();\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n            Ticket Info\r\n            </Typography>\r\n            <div style={{textAlign: 'center', marginBottom: '30px'}}>\r\n            <form>\r\n                <TextField\r\n                        required\r\n                        value={props.val.numTickets}\r\n                        onChange={e => props.handleChange('numTickets', e.target.value)}\r\n                        label=\"Number of Tickets\"\r\n                        type=\"number\"\r\n                        helperText=\"Tickets are $35.00 each\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        style={{marginTop: '16px'}}\r\n                        inputProps={{ maxLength: 35}}\r\n                />\r\n                <br/>\r\n                <MuiThemeProvider theme={TealTheme}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} theme={TealTheme}>\r\n                        <DatePicker\r\n                            required\r\n                            minDate={minimum}\r\n                            label=\"Park Entry Date\"\r\n                            value={props.val.entryDate}\r\n                            onChange={e => props.handleChangedate(\"entryDate\", e)}\r\n                            style={{marginTop: '14px'}}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </MuiThemeProvider>\r\n                {props.handleRainOut}\r\n                <br/>\r\n                <TextField\r\n                        required\r\n                        value={props.val.email}\r\n                        onChange={e => props.handleChange('email', e.target.value)}\r\n                        label=\"Email Address\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        style={{marginTop: '22px'}}\r\n                />\r\n            </form>\r\n            </div>      \r\n        </React.Fragment>\r\n    );\r\n    \r\n}\r\n\r\nexport default TicketInfo;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction PaymentInfo(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField required id=\"cardName\" label=\"Name on card\" value={props.val.nameOnCard} onChange={e => props.handleChange('nameOnCard', e.target.value)} fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField required id=\"cardNumber\" label=\"Card number\" type=\"number\" value={props.val.cardNumber} onChange={e => props.handleChange('cardNumber', e.target.value)} fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField required id=\"expDate\" label=\"Expiry date\" value={props.val.cardExpiration} onChange={e => props.handleChange('cardExpiration', e.target.value)} fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            required\r\n            id=\"cvv\"\r\n            label=\"CVV\"\r\n            type=\"number\"\r\n            value={props.val.cardCVV}\r\n            onChange={e => props.handleChange('cardCVV', e.target.value)}\r\n            helperText=\"Last three digits on signature strip\"\r\n            style={{marginBottom: '30px'}}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PaymentInfo;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = theme => ({\r\n  listItem: {\r\n    padding: `${theme.spacing.unit}px 0`,\r\n  },\r\n  total: {\r\n    fontWeight: '700',\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nfunction Review(props) {\r\n  const { classes } = props;\r\n  const payments = [\r\n    { name: 'Card type', detail: 'Visa' },\r\n    { name: 'Card holder', detail: props.val.nameOnCard },\r\n    { name: 'Card number', detail: 'xxxx-xxxx-xxxx-' + props.val.cardNumber.substring(props.val.cardNumber.length-4, props.val.cardNumber.length) },\r\n    { name: 'Expiry date', detail: props.val.cardExpiration },\r\n  ];\r\n  const tprice = (35*props.val.numTickets);\r\n  const tax = Math.ceil(0.0825*(35*props.val.numTickets)*100)/100;\r\n  const totalprice = tprice+tax;\r\n\r\n  const products = [\r\n    { name: 'Day Pass Ticket', desc: 'Ticket x ' + props.val.numTickets + \" @ $35.00 ea\", price: '$' + tprice.toFixed(2) },\r\n    { name: 'Tax', desc: '', price: '$' + tax.toFixed(2) },\r\n  ];\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      <List disablePadding>\r\n        {products.map(product => (\r\n          <ListItem className={classes.listItem} key={product.name}>\r\n            <ListItemText primary={product.name} secondary={product.desc} />\r\n            <Typography variant=\"body2\">{product.price}</Typography>\r\n          </ListItem>\r\n        ))}\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText primary=\"Total\" />\r\n          <Typography variant=\"subtitle1\" className={classes.total}>\r\n            ${totalprice.toFixed(2)}\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Grid container spacing={16}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Email-Receipt\r\n          </Typography>\r\n          <Typography gutterBottom>{props.val.email}</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Payment details\r\n          </Typography>\r\n          <Grid container>\r\n            {payments.map(payment => (\r\n              <React.Fragment key={payment.name}>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.detail}</Typography>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nReview.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Review);","import React, { Component } from 'react';\r\nimport TopBar from './components/TopBar';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TicketInfo from './components/TicketInfo';\r\nimport PaymentInfo from './components/PaymentInfo';\r\nimport Review from './components/Review';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport './css/PageStyles.css';\r\n\r\n\r\nconst purpleTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {main: purple[900]},\r\n    },\r\n});\r\n\r\nconst styles = theme => ({\r\n    layout: {\r\n        paddingTop: '35px',\r\n      width: 'auto',\r\n      marginLeft: theme.spacing.unit * 2,\r\n      marginRight: theme.spacing.unit * 2,\r\n      [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\r\n        width: 600,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing.unit * 3,\r\n      marginBottom: theme.spacing.unit * 3,\r\n      padding: theme.spacing.unit * 2,\r\n      [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\r\n        marginTop: theme.spacing.unit * 6,\r\n        marginBottom: theme.spacing.unit * 6,\r\n        padding: theme.spacing.unit * 3,\r\n      },\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    stepper: {\r\n      padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`\r\n    },\r\n  \r\n    buttons: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing.unit * 3,\r\n      marginLeft: theme.spacing.unit,\r\n    },\r\n});\r\n  \r\nconst steps = ['Ticket info', 'Payment details', 'Review your order'];\r\n\r\nclass Ticket extends Component {\r\n    state = {\r\n        activeStep: 0,\r\n        numTickets: \"\",\r\n        entryDate: null,\r\n        email: \"\",\r\n        nameOnCard: \"\",\r\n        cardNumber: \"\",\r\n        cardExpiration: \"\",\r\n        cardCVV: \"\",\r\n        ticket_ids : [],\r\n        rainout: 0,\r\n        cancelled: false,\r\n    };\r\n    componentDidMount(){\r\n        this.fetchRainout();\r\n    }\r\n    getStepContent(step) {\r\n        switch (step) {\r\n            case 0:\r\n                return <TicketInfo handleChange={this.handleChange} handleChangedate={this.handleChangedate} val={this.state} handleRainOut={this.handleRainOut()}/>;\r\n            case 1:\r\n                return <PaymentInfo handleChange={this.handleChange} val={this.state}/>;\r\n            case 2:\r\n                return <Review handleChange={this.handleChange} val={this.state}/>;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n    handleChange = (name, value) => {\r\n        this.setState({[name]: value});\r\n    }\r\n    handleChangedate = (name, value) => {\r\n        let LoadingDate1 = new Date(value);\r\n        LoadingDate1 = LoadingDate1.getFullYear() + '-' + (this.fixMonth(LoadingDate1)) + '-' + LoadingDate1.getDate();\r\n        let nd = new Date();\r\n        nd = nd.getFullYear() + '-' + (this.fixMonth(nd)) + '-' + nd.getDate();\r\n\r\n        if(this.state.rainout === 0){\r\n            this.setState({[name]: value});\r\n        }\r\n        else{\r\n            this.setState({[name]: value, cancelled: nd===LoadingDate1});\r\n        }\r\n    }\r\n    handleNext = () => {\r\n        this.setState(state => ({\r\n            activeStep: state.activeStep + 1,\r\n        }));\r\n    };\r\n    handleBack = () => {\r\n        this.setState(state => ({\r\n            activeStep: state.activeStep - 1,\r\n        }));\r\n    };\r\n    validateInput(step){\r\n        if(step === 0){\r\n            return(this.state.email.length > 1 && this.state.numTickets > 0 && this.state.entryDate !== null && this.state.cancelled !== true);\r\n        }\r\n        else if(step === 1){\r\n            return(this.state.nameOnCard.length > 1 && this.state.cardCVV.length > 1 && this.state.cardExpiration.length > 1 && this.state.cardNumber.length > 1);\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n    fetchRainout(){\r\n        fetch(`http://api.themepark.ga/rainout`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ rainout: result.rainedOut }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    addTickets = () => {\r\n        let LoadingDate = new Date(this.state.entryDate);\r\n        LoadingDate = LoadingDate.getFullYear() + '-' + (this.fixMonth(LoadingDate)) + '-' + LoadingDate.getDate();\r\n        fetch(`http://api.themepark.ga/purchase`,{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            numberOfTickets: this.state.numTickets,\r\n            entryDate: LoadingDate,\r\n            email: this.state.email\r\n        }),\r\n    })\r\n    .then(res => res.json())\r\n    .then(result => this.setState({ ticket_ids: result.results }))\r\n    .then(this.handleNext)\r\n    .catch(err => console.log(err))\r\n    }\r\n    fixMonth(date){\r\n        if(date.getMonth()+1 < 10){\r\n            return \"0\" + (date.getMonth() +1);\r\n        }\r\n        else{\r\n            return date.getMonth() + 1;\r\n        }\r\n    }\r\n\r\n    handleRainOut(){\r\n        if(this.state.rainout === 1){\r\n            if(this.state.cancelled){\r\n                return <Typography color=\"error\"><ErrorIcon/>Park Is Closed for Today Due to Rainout</Typography>\r\n            }\r\n            else{\r\n                return <div/>\r\n            }\r\n        }\r\n        else{\r\n            return <div/>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { activeStep } = this.state;\r\n\r\n        let countval = 1;\r\n        return (\r\n            <header className=\"header1\">\r\n                <TopBar/>\r\n                <MuiThemeProvider theme={purpleTheme}>\r\n                \r\n                <CssBaseline />\r\n                <main className={classes.layout}>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography variant=\"h4\" align=\"center\">\r\n                        Purchase Tickets\r\n                        </Typography>\r\n                        <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map(label => (\r\n                            <Step key={label}>\r\n                            <StepLabel >{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                        </Stepper>\r\n                        <React.Fragment>\r\n                            {activeStep === steps.length ? (\r\n                                <React.Fragment>\r\n                                    <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                                        Thank you for Purchasing Tickets!\r\n                                    </Typography>\r\n                                    <div style={{maxHeight: 330, overflowY: 'auto'}}>\r\n                                        {this.state.ticket_ids.map(({Ticket_ID}) => \r\n                                        <ListItem className={classes.listItem} key={Ticket_ID}>\r\n                                            <ListItemText primary={\"Ticket \"+countval++}/>\r\n                                            <Typography variant=\"body2\">Ticket ID: {Ticket_ID}</Typography>\r\n                                        </ListItem>)}\r\n                                    </div>\r\n                                    <Typography variant=\"subtitle1\" align=\"center\">\r\n                                        A copy/receipt has been sent to your email: {this.state.email}\r\n                                    </Typography>\r\n                                </React.Fragment>\r\n                            ) : (\r\n                                <React.Fragment>\r\n                                    {this.getStepContent(activeStep)}\r\n                                    <div className={classes.buttons}>\r\n                                        {activeStep !== 0 && (\r\n                                        <Button onClick={this.handleBack} className={classes.button}>\r\n                                            Back\r\n                                        </Button>\r\n                                        )}\r\n                                        {activeStep === steps.length - 1 ? (<Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={this.addTickets}\r\n                                        className={classes.button}\r\n                                        >Place Order</Button>) : (<Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        disabled={!this.validateInput(activeStep)}\r\n                                        onClick={this.handleNext}\r\n                                        className={classes.button}\r\n                                        >Next</Button>)}\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            )}\r\n                        </React.Fragment>\r\n                    </Paper>\r\n                </main>\r\n                </MuiThemeProvider>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nTicket.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(Ticket);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport '../css/MaintenanceTile.css';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    paddingTop: 70,\r\n    margin: 'auto',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  gridList: {\r\n    margin: 'auto',\r\n    width: 700,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n});\r\n\r\nfunction TitlebarGridList(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={180} spacing={20} className={classes.gridList}>\r\n        {props.list.map(tile => (\r\n          <GridListTile key={tile.RideID} style={{width: '200px'}}>\r\n            <img src=\"https://tribwttv.files.wordpress.com/2016/07/s064723236-300.jpg?quality=85&strip=all&w=400&h=225&crop=1\" alt={tile.Stand_Name} />\r\n            <div className=\"underMaintenance\" style={{display: tile.NeedMaintenance > 0 ? 'block': 'none'}}></div>\r\n            <p style={{display: tile.NeedMaintenance > 0 ? 'block': 'none'}}>Under Maintenance</p>\r\n            <GridListTileBar\r\n              title={tile.RideName}\r\n              actionIcon={\r\n                <IconButton className={classes.icon} style={{textTransform: 'none', outline: 0, border: 'none',}}>\r\n                  <InfoIcon/>\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n\r\nTitlebarGridList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TitlebarGridList);","import React, { Component } from 'react';\r\nimport TopBar from './components/TopBar';\r\nimport RideGrid from './components/RideGrid';\r\nimport './css/PageStyles.css';\r\n\r\nclass Rides extends Component {\r\n  state = {\r\n    rideList: []\r\n  }\r\n  componentDidMount(){\r\n    fetch(`http://api.themepark.ga/ridelist`, {\r\n        method: \"GET\",\r\n    })\r\n        .then(res => res.json())\r\n        .then(result => this.setState({ rideList: result.rideList }))\r\n        .catch(err => console.log(err))\r\n}\r\nrender() {\r\n    return (\r\n        <header className=\"header2\">\r\n            <TopBar/>\r\n            <RideGrid list={this.state.rideList}/>       \r\n        </header>\r\n    );\r\n}\r\n}\r\n\r\nexport default Rides;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Table, TableHead, TableRow, TableCell,TableBody } from '@material-ui/core';\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nclass StandMenu extends React.Component {\r\n  state = {\r\n    stand: this.props.stand,\r\n    items: [],\r\n    open: false,\r\n  };\r\n  renderItems = ({ Item_ID, Item_Name, Item_Price }) =>\r\n    <TableRow key={Item_ID}>\r\n      <TableCell component=\"th\" scope=\"row\">\r\n          {Item_Name}\r\n      </TableCell>\r\n      <TableCell align=\"right\">${Item_Price.toFixed(2)}</TableCell>\r\n    </TableRow>\r\n  \r\n  fetchmenu(){\r\n    fetch(`http://api.themepark.ga/standmenu/${this.state.stand.Stand_ID}`, {\r\n      method: \"GET\",\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => this.setState({ items: result.itemList }))\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  handleClickOpen = _ => {\r\n    this.fetchmenu();\r\n    this.setState({ open: true});\r\n    \r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <IconButton onClick={this.handleClickOpen} style = {{textTransform: 'none', outline: 0, border: 'none', color: \"white\", opacity: .6}}> \r\n          <InfoIcon/>\r\n        </IconButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          TransitionComponent = {Transition}\r\n          scroll='body'\r\n          aria-labelledby=\"scroll-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"scroll-dialog-title\" align = \"center\">\r\n          {`${this.state.stand.Stand_Name} Menu`}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText align = \"center\">\r\n              {`${this.state.stand.Hours_of_operations}`}\r\n            </DialogContentText>\r\n            <div style={{height: \"60vh\", overflowY: 'auto'}}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                <TableCell>Item Name</TableCell>\r\n                <TableCell align = \"right\">Price</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.items.map(this.renderItems)}\r\n              </TableBody>\r\n            </Table>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StandMenu;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StandMenu from './StandMenu';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    paddingTop: 70,\r\n    margin: 'auto',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  gridList: {\r\n    margin: 'auto',\r\n    width: 800,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n});\r\n\r\nfunction TitlebarGridList(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={180} spacing={20} className={classes.gridList}>\r\n        {props.list.map(tile => (\r\n          <GridListTile key={tile.Stand_ID} style={{width: '250px'}}>\r\n            <img src=\"https://www.bodybuilding.com/images/2016/may/40-best-low-calorie-foods-header-v2-400x225.jpg\" alt={tile.Stand_Name} />\r\n            <GridListTileBar\r\n              title={tile.Stand_Name}\r\n              subtitle={<span>{tile.Hours_of_operations}</span>}\r\n              actionIcon={\r\n                <IconButton component={StandMenu} stand ={tile}>\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n\r\nTitlebarGridList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TitlebarGridList);","import React, { Component } from 'react';\r\nimport TopBar from './components/TopBar';\r\nimport Concession from './components/Concession';\r\nimport './css/PageStyles.css';\r\n\r\nclass Dining extends Component {\r\n    state = {\r\n        concessionList: []\r\n    }\r\n    componentDidMount(){\r\n        fetch(`http://api.themepark.ga/concessionlist`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ concessionList: result.diningList }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <header className=\"header3\">\r\n                <TopBar/>\r\n                <Concession list={this.state.concessionList}/>       \r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dining;","import React, { Component } from 'react';\r\nimport TopBar from './components/TopBar';\r\nimport { Button, TextField, Typography, Paper} from '@material-ui/core';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport './css/PageStyles.css';\r\nimport './css/otherfixes.css';\r\n\r\nclass EntranceScan extends Component {\r\n    state = {\r\n        inputScan : \"\",\r\n        output : \"\",\r\n        timer: false,\r\n        rainout: 0,\r\n    }\r\n    componentDidMount(){\r\n        fetch(`http://api.themepark.ga/rainout`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ rainout: result.rainedOut }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    handleChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n    scanTicket = _ => {\r\n        fetch(`http://api.themepark.ga/entrance-scan`,{\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                ticketID: this.state.inputScan\r\n            }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => {this.setState({output: result.status}); this.openWindow()})\r\n        .catch(err => console.log(err))\r\n    }\r\n    returnOut(){\r\n        if(this.state.timer){\r\n            if(this.state.output === 0){\r\n                return <Typography color=\"error\"><ErrorIcon/>Invalid Ticket ID</Typography>\r\n            }\r\n            else if(this.state.output === 1){\r\n                return <Typography color=\"error\"><ErrorIcon/>Ticket is not Valid for Today - For a Future Date</Typography>\r\n            }\r\n            else if(this.state.output === 2){\r\n                return <Typography color=\"error\"><ErrorIcon/>Ticket has already been used</Typography>\r\n            }\r\n            else if(this.state.output === 3){\r\n                return <Typography style={{color: \"green\"}}><DoneIcon/>Ticket Scanned Successfully</Typography>\r\n            }\r\n            else{\r\n                return <Typography color=\"error\"><ErrorIcon/>Something Went Wrong!</Typography>\r\n            }\r\n        }\r\n    }\r\n    outputRainout(){\r\n        if(this.state.rainout === 1){\r\n            return <Typography color=\"error\"><ErrorIcon/>Park Is Closed for Today Due to Rainout</Typography>;\r\n        }\r\n        else{\r\n            return <div/>;\r\n        }\r\n    }\r\n    openWindow(){\r\n        this.setState({timer: true});\r\n        setTimeout(() => {\r\n            this.setState({timer: false});\r\n            this.setState({output: \"\"});\r\n        }, 2000);  \r\n    }\r\n    render() {\r\n        return (\r\n            <header className=\"header5\">\r\n                <TopBar/>\r\n                <div style={{textAlign: \"center\", paddingTop: 100}}>\r\n                <h2 style={{color: 'white'}} className=\"scantitles\">Entrance Scan</h2>\r\n                </div>\r\n                <Paper style={{margin: 'auto', width: '400px'}}>\r\n                <div style={{textAlign: \"center\", paddingTop: '50px', paddingBottom: '50px'}}>\r\n                    <div style={{lineHeight : '56px', textAlign: 'center'}}>\r\n                    <TextField\r\n                            disabled={this.state.rainout === 1}\r\n                            name=\"inputScan\"\r\n                            value={this.state.inputScan}\r\n                            onChange={this.handleChange}\r\n                            label=\"Ticket ID\"\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            style={{width: \"150px\", paddingRight: '10px'}}\r\n                        />\r\n                        <Button disabled={this.state.inputScan < 1} size='large' variant=\"contained\" onClick={this.scanTicket}>\r\n                        Scan\r\n                        </Button>\r\n                    </div>\r\n                    {this.returnOut()}\r\n                    {this.outputRainout()}\r\n                </div>\r\n                </Paper>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EntranceScan;","import React, { Component } from 'react';\r\nimport TopBar from './components/TopBar';\r\nimport { TextField, MenuItem, Button, Typography, Paper } from '@material-ui/core';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport './css/PageStyles.css';\r\nimport './css/otherfixes.css';\r\n\r\nclass ScanRides extends Component {\r\n    state = {\r\n        listOfRides: [],\r\n        selectedRide: \"\",\r\n        inputScan: \"\",\r\n        output: \"\",\r\n        rainout: 0,\r\n    }\r\n    componentDidMount(){\r\n        this.fetchRideList();\r\n        this.fetchRainOut();\r\n    }\r\n\r\n    fetchRideList(){\r\n        fetch(`http://api.themepark.ga/ridelist`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ listOfRides: result.rideList }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    fetchRainOut(){\r\n        fetch(`http://api.themepark.ga/rainout`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ rainout: result.rainedOut }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    scanTicket = _ => {\r\n        fetch(`http://api.themepark.ga/ridescan`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                rideID: this.state.selectedRide,\r\n                ticketID: this.state.inputScan\r\n            }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => {this.setState({output: result.status}); this.openWindow()})\r\n        .catch(err => console.log(err))\r\n    }\r\n    outputRainout(){\r\n        if(this.state.rainout === 1){\r\n            return <Typography color=\"error\"><ErrorIcon/>Park Is Closed for Today Due to Rainout</Typography>;\r\n        }\r\n        else{\r\n            return <div/>;\r\n        }\r\n    }\r\n    returnOut(){\r\n        if(this.state.timer){\r\n            if(this.state.output === 1){\r\n                return <Typography style={{color: \"green\"}}><DoneIcon/>Ticket Scanned Successfully</Typography>\r\n            }\r\n            else{\r\n                return <Typography color=\"error\"><ErrorIcon/>Something Went Wrong!</Typography>\r\n            }\r\n        }\r\n    }\r\n    openWindow(){\r\n        this.setState({timer: true});\r\n        setTimeout(() => {\r\n            this.setState({timer: false});\r\n            this.setState({output: \"\"});\r\n        }, 700);  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"header5\">\r\n                <TopBar/>\r\n                <div style={{textAlign: \"center\", paddingTop: 100}}>\r\n                <h2 style={{color: 'white'}} className=\"scantitles\">Scan Tickets for Rides</h2>\r\n                </div>\r\n                <Paper style={{margin: 'auto', width: '400px'}}>\r\n                <div style={{textAlign: \"center\", paddingTop: '50px', paddingBottom: '50px'}}>\r\n                    <TextField disabled={this.state.rainout === 1} select required label=\"Ride\" name=\"selectedRide\" onChange={this.handleChange} value={this.state.selectedRide} style={{width: 200}}>\r\n                        {this.state.listOfRides.map(option => (\r\n                            <MenuItem disabled={option.NeedMaintenance > 0} key={option.RideID} value={option.RideID}>\r\n                            {option.RideName}\r\n                            </MenuItem>\r\n                            )\r\n                        )}\r\n                    </TextField>\r\n                    <div style={{lineHeight : '56px', textAlign: 'center', marginTop: 20}}>\r\n                    <TextField\r\n                            name=\"inputScan\"\r\n                            disabled={this.state.selectedRide === \"\"}\r\n                            value={this.state.inputScan}\r\n                            onChange={this.handleChange}\r\n                            label=\"Ticket ID\"\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            style={{width: \"150px\", paddingRight: '10px'}}\r\n                        />\r\n                        <Button size='large' variant=\"contained\" onClick={this.scanTicket} disabled={this.state.selectedRide === \"\"}>\r\n                        Scan\r\n                        </Button>  \r\n                    </div>\r\n                    {this.returnOut()}\r\n                    {this.outputRainout()}\r\n                </div>\r\n                </Paper>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScanRides;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { TextField, MenuItem } from '@material-ui/core';\r\n\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nfunction MaintenanceDialogue(props) {\r\n  return (\r\n    <div>\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={props.handleClickOpen}>\r\n          Create New Maintenance Order\r\n        </Button>\r\n        <Dialog\r\n          open={props.val.openDialogue}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={props.handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            {\"Maintenance Order Form\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField select required label=\"Ride\" name=\"selectedRide\" onChange={props.handleChange} value={props.val.selectedRide} style={{width: 200}}>\r\n                        {props.val.listOfRides.map(option => (\r\n                            <MenuItem key={option.RideID} value={option.RideID}>\r\n                            {option.RideName}\r\n                            </MenuItem>\r\n                            )\r\n                        )}\r\n            </TextField>\r\n            <br/>\r\n            <TextField\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                multiline\r\n                rows=\"4\"\r\n                value={props.val.description}\r\n                onChange={props.handleChange}\r\n                style={{width: 300}}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={props.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={props.submitForm} color=\"primary\" disabled={props.val.selectedRide === \"\" || props.val.description === \"\"}>\r\n              Place Order\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default MaintenanceDialogue;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"right\" {...props} />;\r\n}\r\n\r\nfunction MaintDesc(props) {\r\n  return (\r\n    <div>\r\n        <Dialog\r\n          open={props.val.rightDialogue}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={props.handleRightClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            {\"Maintenance Description\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              {props.val.dialogueDesc}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={props.handleRightClose} color=\"primary\">\r\n              CLose\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default MaintDesc;","import React, { Component } from 'react';\r\nimport TopBar from './components/TopBar';\r\nimport { Paper, Table, TableHead, TableRow, TableCell,TableBody } from '@material-ui/core';\r\nimport { Button } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MaintenanceDialogue from './components/MaintenanceDialogue';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport MaintDesc from './components/MaintDesc';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '70%',\r\n        maxHeight: 500,\r\n        marginTop: 20,\r\n        margin: 'auto',\r\n        overflowX: 'auto',\r\n        overflowY: 'auto'\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    header: {\r\n        position: 'sticky',\r\n        top: 0,\r\n        backgroundColor: '#2F4F4F',\r\n        color: 'white'\r\n    },\r\n    button: {\r\n        \"&:hover\": {\r\n          backgroundColor: \"transparent\"\r\n        }\r\n    }\r\n});\r\n\r\nclass Maintenance extends Component {\r\n    state = {\r\n        maintList : [],\r\n        userID: localStorage.getItem('userID'),\r\n        openDialogue: false,\r\n        rightDialogue: false,\r\n        dialogueDesc: \"\",\r\n        listOfRides: [],\r\n        selectedRide: \"\",\r\n        description: \"\",\r\n        rainout: 0\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchMaintenance();\r\n        this.fetchRides();\r\n        this.fetchRainout();\r\n    }\r\n\r\n    fetchMaintenance(){\r\n        fetch(`http://api.themepark.ga/maintenance_needed`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ maintList: result.mainList }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    fetchRides(){\r\n        fetch(`http://api.themepark.ga/ridelist`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ listOfRides: result.rideList }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    fetchRainout(){\r\n        fetch(`http://api.themepark.ga/rainout`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ rainout: result.rainedOut }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    rainoutPark(){\r\n        fetch(`http://api.themepark.ga/nrainout`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ rainout: result.rainedOut }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    completeOrder(order_id){\r\n        fetch(`http://api.themepark.ga/fixmaintenance`,{\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                orderID: order_id,\r\n                completedBy: this.state.userID,\r\n            }),\r\n        })\r\n        .then(()=>this.fetchMaintenance())\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ openDialogue: true });\r\n    };\r\n    \r\n    handleClose = () => {\r\n        this.setState({ openDialogue: false, selectedRide: \"\", description: \"\" });\r\n    };\r\n\r\n    handleRightOpen = (desc) => {\r\n        this.setState({ dialogueDesc: desc, rightDialogue: true });\r\n    };\r\n    \r\n    handleRightClose = () => {\r\n        this.setState({ rightDialogue: false, dialogueDesc: \"\" });\r\n    };\r\n\r\n    submitForm = () => {\r\n        fetch(`http://api.themepark.ga/newmaintenance`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                rideID: this.state.selectedRide,\r\n                employeeID: this.state.userID,\r\n                description: this.state.description\r\n            }),\r\n        })\r\n        .then(()=>this.fetchMaintenance())\r\n        .then(this.handleClose())\r\n        .catch(err => console.log(err))\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    renderMainList = ({ OrderID, DateCreated, RideName, FirstName, LastName, Maintenance_Desc }) =>\r\n        <TableRow key={OrderID}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n                <IconButton className={this.props.classes.button} onClick={()=>this.handleRightOpen(Maintenance_Desc)} style={{textTransform: 'none', outline: 0, border: 'none',marginBottom: 3, marginLeft: -20, marginRight: -10,}}>\r\n                  <InfoIcon/>\r\n                </IconButton>\r\n                {OrderID}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{DateCreated.split(\".\")[0]}</TableCell>\r\n            <TableCell align=\"right\">{RideName}</TableCell>\r\n            <TableCell align=\"right\">{FirstName + \" \" + LastName}</TableCell>\r\n            <TableCell align=\"right\"><Button size='sm' variant=\"outline-danger\" onClick={() => this.completeOrder(OrderID)}>Complete Order</Button></TableCell>\r\n        </TableRow>\r\n\r\n    rainButton(){\r\n        if(this.state.rainout === 0){\r\n            return <Button variant=\"outline-danger\" onClick={()=>this.rainoutPark()} style={{marginTop: 10}}>Rainout Park</Button>;\r\n        }\r\n        else{\r\n            return <Button disabled variant=\"danger\" style={{marginTop: 10}}>Park is Rained Out for Today</Button>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { maintList } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <TopBar/>\r\n                <div style={{textAlign: \"center\"}}>\r\n                    <Paper className={classes.root}>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.header}>Order ID</TableCell>\r\n                                    <TableCell align=\"right\" className={classes.header}>Date Submitted</TableCell>\r\n                                    <TableCell align=\"right\" className={classes.header}>Ride</TableCell>\r\n                                    <TableCell align=\"right\" className={classes.header}>Issued By</TableCell>\r\n                                    <TableCell align=\"right\" className={classes.header}>Action</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                        <TableBody >\r\n                            {maintList.map(this.renderMainList)}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n                <br/>\r\n                <MaintenanceDialogue handleClickOpen={this.handleClickOpen} handleClose={this.handleClose} submitForm={this.submitForm} handleChange={this.handleChange} val={this.state}/>\r\n                <MaintDesc handleRightClose={this.handleRightClose} val={this.state}/>\r\n                {this.rainButton()}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nMaintenance.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(Maintenance);","import React, {Component} from 'react';\r\nimport {Button, TextField, Typography} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TopBar from './components/TopBar';\r\n\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: 200,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n});\r\n\r\nclass CreateRide extends Component {\r\n    state = {\r\n      name: '',\r\n      runsBeforeMaintenance: '',\r\n      numSeats: '',\r\n    };\r\n  \r\n  createRide() {\r\n    fetch(`http://api.themepark.ga/new-ride`,{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            rideName: this.state.name,\r\n            runsBeforeMaintenance: this.state.runsBeforeMaintenance,\r\n            numSeats: this.state.numSeats\r\n        }),\r\n    })\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <React.Fragment>\r\n      <TopBar/>\r\n      <div style={{textAlign: 'center', marginBottom: '30px'}}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Enter new ride information\r\n      </Typography>\r\n      <TextField\r\n          id=\"standard-name\"\r\n          label=\"Name\"\r\n          className={classes.textField}\r\n          value={this.state.name}\r\n          onChange={this.handleChange('name')}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n        id=\"maintenance\"\r\n        label=\"Runs before maintenance\"\r\n        type=\"number\"\r\n        className={classes.textField}\r\n        value={this.state.runsBeforeMaintenance}\r\n        onChange={this.handleChange('runsBeforeMaintenance')}\r\n        margin=\"normal\"\r\n        />\r\n      <TextField\r\n          id=\"seats\"\r\n          label=\"Number of seats\"\r\n          type=\"number\"\r\n          className={classes.textField}\r\n          value={this.state.numSeats}\r\n          onChange={this.handleChange('numSeats')}\r\n          margin=\"normal\"\r\n      />\r\n      </div>\r\n      <div style={{display: 'flex', justifyContent: 'center'}}>\r\n        <Button\r\n      disabled={!(this.state.name.length > 1)}\r\n      onClick={() => this.createRide()}\r\n      >\r\n      Submit\r\n      </Button>\r\n      </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nCreateRide.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CreateRide);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { TextField, MenuItem } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\nfunction AddEmployeeDialogue(props) {\r\n  return (\r\n    <div>\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={props.handleClickOpen}>\r\n          Add New Employee\r\n        </Button>\r\n        <Dialog\r\n          open={props.val.openDialogue}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={props.handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            {\"New Employee Details\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n          <TextField select label=\"Department\" name=\"dialogueDept\" onChange={e=>props.handleChange('dialogueDept',e.target.value)} value={props.val.dialogueDept} style={{width: 200}}>\r\n            {props.val.deptList.map(option => (\r\n                    <MenuItem key={option.DeptID} value={option.DeptID}>\r\n                    {option.Name}\r\n                    </MenuItem>\r\n                    )\r\n                )}\r\n          </TextField>\r\n          <Grid container spacing={24}>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField required id=\"firstname\" label=\"First Name\" \r\n              value={props.val.firstname} \r\n              onChange={e => props.handleChange('firstname', e.target.value)} fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField required id=\"lastname\" label=\"Last Name\"\r\n               value={props.val.lastname} \r\n               onChange={e => props.handleChange('lastname', e.target.value)} fullWidth />\r\n            </Grid>\r\n          </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={props.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={props.submitForm} color=\"primary\">\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AddEmployeeDialogue;","import React, { Component } from 'react';\r\nimport TopBar from './components/TopBar';\r\nimport { TextField, withStyles, MenuItem} from '@material-ui/core';\r\nimport { Paper, Table, TableHead, TableRow, TableCell,TableBody } from '@material-ui/core';\r\nimport AddEmployeeDialogue from './components/AddEmployeeDialogue';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '70%',\r\n        maxHeight: 500,\r\n        marginTop: 10,\r\n        margin: 'auto',\r\n        overflowX: 'auto',\r\n        overflowY: 'auto'\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    header: {\r\n        position: 'sticky',\r\n        top: 0,\r\n        backgroundColor: '#2F4F4F',\r\n        color: 'white'\r\n    }\r\n});\r\n\r\nclass Department extends Component{\r\n    state = {\r\n        deptList: [],\r\n        listOfRides: [],\r\n        empList: [],\r\n        userID: 1,\r\n        openDialogue: false,\r\n        selectedDept: 0,\r\n        dialogueDept: \"\",\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n    }\r\n    componentDidMount(){\r\n        this.fetchDepartments();\r\n        this.fetchEmployees(0);\r\n    }\r\n    handleChange = (name, value) => {\r\n        this.setState({[name]: value});\r\n    }\r\n    handleChangeDept = (name, value) => {\r\n        this.setState({[name]: value});\r\n        this.fetchEmployees(value);\r\n    }\r\n    handleClickOpen = () => {\r\n        this.setState({ openDialogue: true });\r\n    };\r\n    handleClose = () => {\r\n        this.setState({ openDialogue: false, firstname: \"\", lastname: \"\", dialogueDept: \"\"});\r\n    };\r\n    fetchEmployees(value){\r\n        if(value === 0){\r\n            fetch(`http://api.themepark.ga/getallemps`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ empList: result.status }))\r\n            .catch(err => console.log(err))\r\n        }\r\n        else{\r\n            fetch(`http://api.themepark.ga/getallemp/${value}`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ empList: result.status }))\r\n            .catch(err => console.log(err))\r\n        }\r\n    }\r\n    fetchDepartments(){\r\n        fetch(`http://api.themepark.ga/departmentlist`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ deptList: result.dList }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    validateInput(){\r\n        return(this.state.firstname.length > 1 && this.state.lastname.length > 1)\r\n    }\r\n    submitForm = () => {\r\n        fetch(`http://api.themepark.ga/newemployee`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                dept: this.state.dialogueDept,\r\n                firstname: this.state.firstname,\r\n                lastname: this.state.lastname,\r\n            }),\r\n        })\r\n        .then(()=>this.fetchEmployees(this.state.selectedDept))\r\n        .then(this.handleClose())\r\n        .catch(err => console.log(err))\r\n    };\r\n\r\n    fixManager(eid, mid, Mfn, Mln){\r\n        if(eid === mid){\r\n            return \"MANAGER\";\r\n        }\r\n        else{\r\n            return Mfn + \" \" + Mln;\r\n        }\r\n    }\r\n\r\n    renderMainList = ({ Name, EmployeeID, FirstName, LastName, MFirstName, MLastName, ManagerID }) =>\r\n        <TableRow key={EmployeeID}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n                {Name}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{EmployeeID}</TableCell>\r\n            <TableCell align=\"right\">{FirstName + \" \" + LastName}</TableCell>\r\n            <TableCell align=\"right\">{this.fixManager(EmployeeID,ManagerID, MFirstName, MLastName)}</TableCell>\r\n        </TableRow>\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { empList } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <TopBar/>\r\n                <div style={{textAlign: \"center\"}}>\r\n                    <TextField select label=\"Department\" name=\"selectedDept\" onChange={e=>this.handleChangeDept('selectedDept',e.target.value)} value={this.state.selectedDept} style={{width: 200}}>\r\n                        <MenuItem value={0}>\r\n                            All Employees\r\n                        </MenuItem>\r\n                    {this.state.deptList.map(option => (\r\n                            <MenuItem key={option.DeptID} value={option.DeptID}>\r\n                            {option.Name}\r\n                            </MenuItem>\r\n                            )\r\n                        )}\r\n                    </TextField>\r\n                    <Paper className={classes.root}>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.header}>Department</TableCell>\r\n                                    <TableCell align=\"right\" className={classes.header}>Employee ID</TableCell>\r\n                                    <TableCell align=\"right\" className={classes.header}>Name</TableCell>\r\n                                    <TableCell align=\"right\" className={classes.header}>Manager</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                        <TableBody>\r\n                            {empList.map(this.renderMainList)}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n                <br/>\r\n                <AddEmployeeDialogue handleClickOpen={this.handleClickOpen} handleClose={this.handleClose} submitForm={this.submitForm} handleChange={this.handleChange} val={this.state}/>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Department);","import React, { Component } from 'react';\r\nimport TopBar from './components/TopBar';\r\nimport { Button, Paper} from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nclass Login extends Component{\r\n      state = {\r\n          UserID: \"\",\r\n          username: \"\",\r\n          Password: \"\",\r\n          output:\"\",\r\n          departmentID: \"\",\r\n          depLoaded: false,\r\n      };\r\n      handleUserID = text =>{\r\n          this.setState({ username: text.target.value });\r\n      }\r\n      handlePassword = text =>{\r\n          this.setState({ Password: text.target.value });\r\n      }\r\n     \r\n      getDepartmentID(id){\r\n         fetch('http://api.themepark.ga/getDepartmentID',{\r\n                 method: 'POST',\r\n                headers:{\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                body:JSON.stringify({\r\n                    userID: id,\r\n                 })\r\n              }).then(res => res.json())\r\n             .then(result => {\r\n                localStorage.setItem('departmentID',result.departmentID[0].DeptID);\r\n                if(this.state.UserID === result.departmentID[0].ManagerID){\r\n                    localStorage.setItem('isManager', true);\r\n                }\r\n                else{\r\n                    localStorage.setItem('isManager', false);\r\n                }\r\n                this.setState({departmentID: result.departmentID[0].DeptID, depLoaded: true});\r\n                 \r\n        })\r\n       .catch(err => console.log(err))\r\n      }\r\n\r\n      Login(){\r\n          \r\n          fetch('http://api.themepark.ga/login',{\r\n                method: 'POST',\r\n                headers:{\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                body:JSON.stringify({\r\n                    userID: this.state.username,\r\n                    password: this.state.Password\r\n                })\r\n           }).then(res => res.json())\r\n           .then(result => {\r\n               if(result.userID !== null && result.userID !== undefined){\r\n                this.getDepartmentID(result.userID);\r\n                localStorage.setItem('userID',result.userID);\r\n                this.setState({UserID: result.userID, output: result.status});\r\n           }\r\n        })\r\n           .catch(err => console.log(err))\r\n           \r\n      }\r\n      output(){\r\n        if(this.state.output === 0){\r\n            return <center><text><font color=\"red\">Username or Password are incorrect</font></text></center>\r\n        }\r\n      }\r\n\r\n      render() {\r\n          if(this.state.output === 1 && this.state.depLoaded){\r\n              window.location.replace('/');\r\n          }\r\n            return (\r\n                <div className= \"Login\">\r\n                <TopBar/>\r\n                <div style={{textAlign: \"center\", paddingTop: 100}}>\r\n                <h2 style={{color: 'Black'}}>Account Information</h2>\r\n                </div>\r\n                 <Paper style={{margin: 'auto', width: '300px'}}>\r\n                    <div style={{textAlign: \"center\", paddingTop: '50px', paddingBottom: '50px'}}>\r\n                      <center><FormControl margin=\"normal\" required >\r\n                        <InputLabel htmlFor=\"username\" >Username</InputLabel>\r\n                        <Input id=\"username\" name=\"username\" autoComplete=\"User ID\" autoFocus onChange={this.handleUserID} value={this.state.username}/>\r\n                      </FormControl></center>\r\n                      <center><FormControl margin=\"normal\" required >\r\n                         <InputLabel htmlFor=\"Password\">Password</InputLabel>\r\n                          <Input name=\"Password\" type=\"Password\" id=\"Password\" onChange={this.handlePassword} value={this.state.Password}/>\r\n                      </FormControl></center>\r\n                  <center><Button onClick={()=>this.Login()}>Login </Button></center>\r\n                  {this.output()}\r\n                </div>\r\n                </Paper>\r\n                </div>\r\n           );\r\n          \r\n          \r\n      }\r\n  }\r\n  \r\n  export default Login;","import React, { Component } from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, } from 'recharts';\r\nimport TopBar from './components/TopBar';\r\nimport {TextField, MenuItem} from '@material-ui/core';\r\n//import RideAnalytics from './RideAnalytics';\r\n\r\nclass Analytics extends Component {\r\n    state = {\r\n        data: [],\r\n        ridedata: [],\r\n        rideList: [],\r\n        dataVal: \"year\",\r\n        yearList: [],\r\n        monthList: [],\r\n        selectedyear: 0,\r\n        selectedmonth: 0\r\n    }\r\n    componentDidMount(){\r\n        this.fetchYearInfo();\r\n        this.fetchYearList();\r\n        this.fetchPivot();\r\n        this.fetchRideList();\r\n    }\r\n\r\n    fetchPivot() {\r\n        fetch(`http://api.themepark.ga/newridepivot`, {\r\n            method: \"GET\",\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => this.setState({ridedata: result.data}))\r\n    }\r\n    \r\n    fetchRideList() {\r\n        fetch(`http://api.themepark.ga/ridelist`, {\r\n            method: \"GET\",\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => this.setState({rideList: result.rideList}))\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    fetchYearInfo(){\r\n        fetch(`http://api.themepark.ga/yearanalytics`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ data: result.data, dataVal: \"year\" }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    fetchMonthInfo(year){\r\n        fetch(`http://api.themepark.ga/monthanalytics/${year}`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ data: result.data, dataVal: \"month\" }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    fetchDayInfo(month){\r\n        fetch(`http://api.themepark.ga/dayanalytics/${this.state.selectedyear}/${month}`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ data: result.data, dataVal: \"dayname\" }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    fetchYearList(){\r\n        fetch(`http://api.themepark.ga/selyear`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ yearList: result.years }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    fetchMonthList(year){\r\n        fetch(`http://api.themepark.ga/selmonth/${year}`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ monthList: result.data }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleChange = event => {\r\n        if(event.target.value===0){\r\n            this.setState({selectedmonth: 0, monthList: [],[event.target.name]: event.target.value});\r\n            this.fetchYearInfo();\r\n        }\r\n        else{\r\n            this.setState({selectedmonth: 0,[event.target.name]: event.target.value});\r\n            this.fetchMonthInfo(event.target.value);\r\n            this.fetchMonthList(event.target.value);\r\n        }\r\n        \r\n    }\r\n    handleChangemon = event => {\r\n        if(event.target.value===0){\r\n            this.setState({[event.target.name]: event.target.value});\r\n            this.fetchMonthInfo(this.state.selectedyear);\r\n        }\r\n        else{   \r\n            this.setState({[event.target.name]: event.target.value});\r\n            this.fetchDayInfo(event.target.value);\r\n        } \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <TopBar/>\r\n                \r\n                <div style={{textAlign: \"center\", paddingBottom: 100}}>\r\n                    \r\n                    <br/>\r\n                <TextField select required label=\"Select a year\" name=\"selectedyear\" onChange={this.handleChange} value={this.state.selectedyear} style={{width: 200, marginBottom: 10}}>\r\n                            <MenuItem value={0}>\r\n                            All\r\n                            </MenuItem>\r\n                        {this.state.yearList.map(option => (\r\n                            <MenuItem key={option.year} value={option.year}>\r\n                            {option.year}\r\n                            </MenuItem>\r\n                            )\r\n                        )}\r\n                </TextField>\r\n                <TextField disabled={this.state.selectedyear===0} select required label=\"Select a month\" name=\"selectedmonth\" onChange={this.handleChangemon} value={this.state.selectedmonth} style={{width: 200, marginBottom: 10}}>\r\n                            <MenuItem value={0}>\r\n                            All\r\n                            </MenuItem>\r\n                        {this.state.monthList.map(option => (\r\n                            <MenuItem key={option.month} value={option.month}>\r\n                            {option.month}\r\n                            </MenuItem>\r\n                            )\r\n                        )}\r\n                </TextField>\r\n                <h2>Ticket Sale Analytics</h2>\r\n                    <BarChart\r\n                width={800}\r\n                height={500}\r\n                data={this.state.data}\r\n                style={{margin: 'auto'}}\r\n                margin={{left: 0, right: 60}}\r\n                >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey={this.state.dataVal}/>\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"tickets_sold\" fill=\"#2F4F4F\"/>\r\n            </BarChart>\r\n                </div>\r\n            </React.Fragment>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default Analytics;","import React, { Component } from 'react';\r\nimport TopBar from './components/TopBar';\r\nimport { Button, Paper} from '@material-ui/core';\r\nimport AccIcon from '@material-ui/icons/AccountBox';\r\n\r\nclass AccountSettings extends Component{\r\n    state = {\r\n        userID: localStorage.getItem('userID'),\r\n        fName: \"\",\r\n        lName: \"\",\r\n        depoName: \"\",\r\n        Password: \"\",\r\n        NewPassword: \"\",\r\n        CheckPassword: \"\",\r\n        output:\"\",\r\n        correctpass: \"\"\r\n    };\r\n    componentDidMount(){\r\n        fetch('http://api.themepark.ga/getEmployeeInfo',{\r\n                method: 'POST',\r\n                headers:{\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                body:JSON.stringify({\r\n                    userID: this.state.userID,\r\n                })\r\n           }).then(res => res.json())\r\n           .then(result => {\r\n               this.setState({fName: result.data[0].FirstName});\r\n               this.setState({lName: result.data[0].LastName});\r\n                this.setState({depoName: result.data[0].Name});\r\n\r\n        })\r\n           .catch(err => console.log(err))\r\n    }\r\nrender() {\r\n    if(this.state.output===1){\r\n        this.handleChangedPassword();\r\n    }\r\n      return (\r\n          <div className= \"AccountSettings\">\r\n          <TopBar/>\r\n          <div style={{textAlign: \"center\", paddingTop: 100}}>\r\n          <h2 style={{color: 'Black'}}>Account Information</h2>\r\n          </div>\r\n          <Paper style={{margin: 'auto', width: '300px'}}>\r\n          <div style={{textAlign: \"center\", paddingTop: '50px', paddingBottom: '50px'}}>\r\n                <AccIcon style={{fontSize: '600%'}}/>\r\n                 <center><b>First Name:</b> {this.state.fName}</center>\r\n                 <center><b>Last Name:</b> {this.state.lName}</center>\r\n                 <center><b>Department:</b> {this.state.depoName}</center>\r\n                 <center><b>User ID:</b> {this.state.userID}</center>\r\n                 <center><Button onClick={()=>window.location.replace('/ChangePassword')}>Change Password</Button></center>\r\n             </div>\r\n             </Paper>\r\n          </div>\r\n     );\r\n }\r\n    \r\n    \r\n}\r\nexport default AccountSettings;","import React, { Component } from \"react\";\r\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { CheckCircle, Cancel } from \"@material-ui/icons\";\r\nimport ToolTip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"70%\",\r\n    maxHeight: 500,\r\n    marginTop: 20,\r\n    margin: \"auto\",\r\n    overflowX: \"auto\",\r\n    overflowY: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 500\r\n  },\r\n  header: {\r\n    position: \"sticky\",\r\n    top: 0,\r\n    backgroundColor: \"#2F4F4F\",\r\n    color: \"white\",\r\n    fontSize: 24,\r\n  },\r\n  button: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  centerIcon: {\r\n    color: \"red\",\r\n    verticalAlign: \"middle\",\r\n    fontSize: 20,\r\n    position: \"relative\",\r\n    bottom: 3\r\n  }\r\n});\r\n\r\nclass RideStatus extends Component {\r\n  state = {\r\n    statusData: [],\r\n    totalRevenue: 0,\r\n    yearList: [],\r\n    monthList: [],\r\n    selectedyear: 0,\r\n    selectedmonth: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchRideList();\r\n  }\r\n\r\n  fetchRideList() {\r\n    fetch(`http://api.themepark.ga/ridelist`, {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => this.setState({ statusData: result.rideList }));\r\n  }\r\n\r\n  renderRideStatus = ({ RideName, NeedMaintenance }) => (\r\n  <ToolTip key={RideName} title={ NeedMaintenance > 0 ? \"Maintenance Required\" : \"Operational\"}>\r\n    <TableCell align=\"center\">\r\n        {NeedMaintenance > 0 ? (\r\n            <Cancel\r\n              style={{\r\n                color: \"red\",\r\n                fontSize: 18,\r\n                position: \"relative\",\r\n                bottom: 3\r\n              }}\r\n            />\r\n        ) : (\r\n            <CheckCircle\r\n              style={{\r\n                color: \"green\",\r\n                fontSize: 18,\r\n                position: \"relative\",\r\n                bottom: 3\r\n              }}\r\n            />\r\n        )}\r\n        <br/>\r\n        <span style={{ fontSize: 16, fontFamily: 'Roboto, Helvetica, Arial, sans-serif' }}>{RideName}</span>\r\n    </TableCell>\r\n    </ToolTip>\r\n  );\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { statusData } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Paper className={classes.root}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\" className={classes.header}>Ride Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n          </Table>\r\n          <Table className={classes.table}>\r\n          <TableBody>\r\n            <TableRow>{statusData.map(this.renderRideStatus)}</TableRow>\r\n          </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nRideStatus.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(RideStatus);\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\n// prettier-ignore\r\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"40%\",\r\n    maxHeight: 500,\r\n    marginTop: 20,\r\n    margin: \"auto\",\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    minWidth: 500\r\n  },\r\n  header: {\r\n    position: \"sticky\",\r\n    top: 0,\r\n    backgroundColor: \"#2F4F4F\",\r\n    color: \"white\",\r\n    fontSize: 24\r\n  },\r\n  header2: {\r\n    position: \"sticky\",\r\n    top: 0,\r\n    backgroundColor: \"white\",\r\n    fontSize: 17\r\n  },\r\n  button: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  centerIcon: {\r\n    color: \"red\",\r\n    verticalAlign: \"middle\",\r\n    fontSize: 20,\r\n    position: \"relative\",\r\n    bottom: 3\r\n  }\r\n});\r\n\r\nclass SalesReport extends Component {\r\n  state = {\r\n    data: [],\r\n    ridedata: [],\r\n    rideList: [],\r\n    dataVal: \"Year\",\r\n    yearList: [],\r\n    monthList: [],\r\n    selectedyear: 0,\r\n    selectedmonth: 0\r\n  };\r\n  \r\n  componentDidMount() {\r\n    this.fetchYearInfo();\r\n    this.fetchYearList();\r\n    this.fetchPivot();\r\n    this.fetchRideList();\r\n  }\r\n\r\n  fetchPivot() {\r\n    fetch(`http://api.themepark.ga/newridepivot`, {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => this.setState({ ridedata: result.data }));\r\n  }\r\n\r\n  fetchRideList() {\r\n    fetch(`http://api.themepark.ga/ridelist`, {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => this.setState({ rideList: result.rideList }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  fetchYearInfo() {\r\n    fetch(`http://api.themepark.ga/yearanalytics`, {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => this.setState({ data: result.data, dataVal: \"Year\" }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  fetchMonthInfo(year) {\r\n    fetch(`http://api.themepark.ga/monthanalytics/${year}`, {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => this.setState({ data: result.data, dataVal: \"Month\" }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  fetchDayInfo(month) {\r\n    fetch(\r\n      `http://api.themepark.ga/dayanalytics/${\r\n        this.state.selectedyear\r\n      }/${month}`,\r\n      {\r\n        method: \"GET\"\r\n      }\r\n    )\r\n      .then(res => res.json())\r\n      .then(result => this.setState({ data: result.data, dataVal: \"Day\" }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  fetchYearList() {\r\n    fetch(`http://api.themepark.ga/selyear`, {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => this.setState({ yearList: result.years }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  fetchMonthList(year) {\r\n    fetch(`http://api.themepark.ga/selmonth/${year}`, {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => this.setState({ monthList: result.data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  handleChange = event => {\r\n    if (event.target.value === 0) {\r\n      this.setState({\r\n        selectedmonth: 0,\r\n        monthList: [],\r\n        [event.target.name]: event.target.value\r\n      });\r\n      this.fetchYearInfo();\r\n    } else {\r\n      this.setState({\r\n        selectedmonth: 0,\r\n        [event.target.name]: event.target.value\r\n      });\r\n      this.fetchMonthInfo(event.target.value);\r\n      this.fetchMonthList(event.target.value);\r\n    }\r\n  }\r\n\r\n  handleChangemon = event => {\r\n    if (event.target.value === 0) {\r\n      this.setState({ [event.target.name]: event.target.value });\r\n      this.fetchMonthInfo(this.state.selectedyear);\r\n    } else {\r\n      this.setState({ [event.target.name]: event.target.value });\r\n      this.fetchDayInfo(event.target.value);\r\n    }\r\n  }\r\n  \r\n  renderSales = ({year, month, dayname, tickets_sold}) => {\r\n    \r\n    if (this.state.dataVal === 'Year') {\r\n      return (\r\n        <TableRow key={Math.random() * 100}>\r\n          <TableCell>{year}</TableCell>\r\n          <TableCell align=\"right\">{tickets_sold}</TableCell>\r\n          <TableCell align=\"right\">${tickets_sold * 35}.00</TableCell>\r\n        </TableRow>\r\n      )\r\n    } \r\n    else if (this.state.dataVal === 'Month') {\r\n      return (\r\n        <TableRow key={Math.random() * 100}>\r\n          <TableCell>{month}</TableCell>\r\n          <TableCell align=\"right\">{tickets_sold}</TableCell>\r\n          <TableCell align=\"right\">${tickets_sold * 35}.00</TableCell>\r\n        </TableRow>\r\n      )\r\n    }\r\n    else if (this.state.dataVal === 'Day') {\r\n      return (\r\n        <TableRow key={Math.random() * 100}>\r\n          <TableCell>{dayname}</TableCell>\r\n          <TableCell align=\"right\">{tickets_sold}</TableCell>\r\n          <TableCell align=\"right\">${tickets_sold * 35}.00</TableCell>\r\n        </TableRow>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { data } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Paper className={classes.root}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\" className={classes.header}>Ticket Sales</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">\r\n              <TextField\r\n                select\r\n                required\r\n                label=\"Select a year\"\r\n                name=\"selectedyear\"\r\n                onChange={this.handleChange}\r\n                value={this.state.selectedyear}\r\n                style={{ width: 200, marginBottom: 10 }}\r\n              >\r\n                <MenuItem value={0}>All</MenuItem>\r\n                {this.state.yearList.map(option => (\r\n                  <MenuItem key={option.year} value={option.year}>\r\n                    {option.year}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                disabled={this.state.selectedyear === 0}\r\n                select\r\n                required\r\n                label=\"Select a month\"\r\n                name=\"selectedmonth\"\r\n                onChange={this.handleChangemon}\r\n                value={this.state.selectedmonth}\r\n                style={{ width: 200, marginBottom: 10 }}\r\n              >\r\n                <MenuItem value={0}>All</MenuItem>\r\n                {this.state.monthList.map(option => (\r\n                  <MenuItem key={option.month} value={option.month}>\r\n                    {option.month}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n          </Table>\r\n          <div style={{maxHeight: 330, overflowY: 'auto'}}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.header2}>{this.state.dataVal}</TableCell>\r\n              <TableCell align=\"right\" className={classes.header2}>Tickets Sold</TableCell>\r\n              <TableCell align=\"right\" className={classes.header2}>Revenue</TableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                  {data.map(this.renderSales)}\r\n            </TableBody>\r\n            </Table>\r\n            </div>\r\n        </Paper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nSalesReport.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SalesReport);\r\n","import React, { Component }  from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from 'material-ui-pickers';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from '@material-ui/core';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"40%\",\r\n    marginTop: 20,\r\n    margin: \"auto\",\r\n    overflowY: \"auto\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 500\r\n  },\r\n  table1: {\r\n    minWidth: 500,\r\n    \r\n  },\r\n  header: {\r\n    position: \"sticky\",\r\n    top: 0,\r\n    backgroundColor: \"#2F4F4F\",\r\n    color: \"white\",\r\n    fontSize: 24\r\n  },\r\n  button: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  centerIcon: {\r\n    color: \"red\",\r\n    verticalAlign: \"middle\",\r\n    fontSize: 20,\r\n    position: \"relative\",\r\n    bottom: 3\r\n  }\r\n});\r\n\r\nclass BetweenReport extends Component {\r\n  state = {\r\n    rideData: [],\r\n    ticketData: [],\r\n    maintData: [],\r\n    rainData: [],\r\n    from: null,\r\n    to: null,\r\n  }\r\n\r\n  fixMonth(date){\r\n    if(date.getMonth()+1 < 10){\r\n        return \"0\" + (date.getMonth() +1);\r\n    }\r\n    else{\r\n        return date.getMonth() + 1;\r\n    }\r\n  }\r\n\r\n  fetchRideInfo() {\r\n    let fromDate = this.state.from;\r\n    fromDate = fromDate.getFullYear() + '-' + (this.fixMonth(fromDate)) + '-' + fromDate.getDate();\r\n    let toDate = this.state.to;\r\n    toDate = toDate.getFullYear() + '-' + (this.fixMonth(toDate)) + '-' + toDate.getDate();\r\n    fetch(`http://api.themepark.ga/ridesbetween/${fromDate}&${toDate}`, {\r\n      method: \"GET\"\r\n    })\r\n    .then(res => res.json())\r\n    .then(result => this.setState({rideData: result.ridesBetween}))\r\n  }\r\n\r\n  fetchTicketInfo() {\r\n    let fromDate = this.state.from;\r\n    fromDate = fromDate.getFullYear() + '-' + (this.fixMonth(fromDate)) + '-' + fromDate.getDate();\r\n    let toDate = this.state.to;\r\n    toDate = toDate.getFullYear() + '-' + (this.fixMonth(toDate)) + '-' + toDate.getDate();\r\n    fetch(`http://api.themepark.ga/ticketsbetween/${fromDate}&${toDate}`, {\r\n      method: \"GET\"\r\n    })\r\n    .then(res => res.json())\r\n    .then(result => this.setState({ticketData: result.ticketsBetween}))\r\n  }\r\n  \r\n  fetchMaintInfo() {\r\n    let fromDate = this.state.from;\r\n    fromDate = fromDate.getFullYear() + '-' + (this.fixMonth(fromDate)) + '-' + fromDate.getDate();\r\n    let toDate = this.state.to;\r\n    toDate = toDate.getFullYear() + '-' + (this.fixMonth(toDate)) + '-' + toDate.getDate();\r\n    fetch(`http://api.themepark.ga/maintenancebetween/${fromDate}&${toDate}`, {\r\n      method: \"GET\"\r\n    })\r\n    .then(res => res.json())\r\n    .then(result => this.setState({maintData: result.maintBetween}))\r\n  }\r\n\r\n  fetchRainInfo() {\r\n    let fromDate = this.state.from;\r\n    fromDate = fromDate.getFullYear() + '-' + (this.fixMonth(fromDate)) + '-' + fromDate.getDate();\r\n    let toDate = this.state.to;\r\n    toDate = toDate.getFullYear() + '-' + (this.fixMonth(toDate)) + '-' + toDate.getDate();\r\n    fetch(`http://api.themepark.ga/rainoutsbetween/${fromDate}&${toDate}`, {\r\n      method: \"GET\"\r\n    })\r\n    .then(res => res.json())\r\n    .then(result => this.setState({rainData: result.rainBetween}))\r\n  }\r\n\r\n  handleChange= (name,event) => {\r\n    this.setState({[name] : event})\r\n  }\r\n\r\n  buttonSubmit () {\r\n    this.fetchRainInfo();\r\n    this.fetchMaintInfo();\r\n    this.fetchTicketInfo();\r\n    this.fetchRideInfo();\r\n  }\r\n\r\n  renderTicketData = ({tickets_sold }) => (\r\n    <TableRow key={Math.random() * 100}>\r\n      <TableCell>{tickets_sold}</TableCell>\r\n      <TableCell align=\"right\">${tickets_sold * 35}.00</TableCell>\r\n    </TableRow>\r\n  )\r\n\r\n  renderRainoutData = ({rainoutDate }) => (\r\n    <TableRow key={Math.random() * 100}>\r\n      <TableCell>{rainoutDate.split('T')[0]}</TableCell>\r\n    </TableRow>\r\n  )\r\n\r\n  renderMaintData = ({RideName, OrderCount }) => (\r\n    <TableRow key={Math.random() * 100}>\r\n      <TableCell>{RideName}</TableCell>\r\n      <TableCell align=\"right\">{OrderCount}</TableCell>\r\n    </TableRow>\r\n  )\r\n\r\n  renderRideData = ({RideName, RideCounts }) => (\r\n    <TableRow key={Math.random() * 100}>\r\n      <TableCell>{RideName}</TableCell>\r\n      <TableCell align=\"right\">{RideCounts == null ? 0 : RideCounts}</TableCell>\r\n    </TableRow>\r\n  )\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { ticketData } = this.state;\r\n    const { maintData } = this.state;\r\n    const { rideData } = this.state;\r\n    const { rainData } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Paper className={classes.root}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n              <TableCell align=\"center\" className={classes.header}>Report Generator</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell align=\"center\">\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                  <DatePicker style={{marginRight: 10}}\r\n                  required\r\n                  label=\"From:\"\r\n                  value={this.state.from}\r\n                  onChange={e => this.handleChange(\"from\",e)}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                  <DatePicker style={{marginRight: 10}}\r\n                  required\r\n                  label=\"To:\"\r\n                  value={this.state.to}\r\n                  onChange={e => this.handleChange(\"to\",e)}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n                <Button variant=\"contained\" style={{marginTop: 5}}\r\n                onClick={() => this.buttonSubmit()}\r\n                >\r\n                Submit\r\n                </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>            \r\n          </Table>\r\n          <div style={{maxHeight: '70vh', overflowY: 'auto'}}>\r\n          <Table >\r\n          <TableBody className={classes.table}>\r\n            <TableRow>\r\n                <TableCell align=\"center\" style={{fontSize: 17, fontWeight: 700, background: '#DCDCDC'}}>Ticket Report</TableCell>\r\n              </TableRow>\r\n          </TableBody>\r\n          </Table>\r\n          <Table>\r\n            <TableHead>\r\n            <TableRow>\r\n                <TableCell>Tickets Sold</TableCell>\r\n                <TableCell align='right'>Revenue</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {ticketData.map(this.renderTicketData)}\r\n            </TableBody>\r\n          </Table>\r\n          <Table >\r\n          <TableBody className={classes.table}>\r\n            <TableRow>\r\n                <TableCell align=\"center\" style={{fontSize: 17, fontWeight: 700, background: '#DCDCDC'}}>Ride Report</TableCell>\r\n              </TableRow>\r\n          </TableBody>\r\n          </Table>\r\n          <Table>\r\n            <TableHead>\r\n            <TableRow>\r\n                <TableCell>Ride</TableCell>\r\n                <TableCell align='right'># of Riders</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {rideData.map(this.renderRideData)}\r\n            </TableBody>\r\n          </Table>\r\n          <Table >\r\n          <TableBody className={classes.table}>\r\n            <TableRow>\r\n                <TableCell align=\"center\" style={{fontSize: 17, fontWeight: 700, background: '#DCDCDC'}}>Maintenance Report</TableCell>\r\n              </TableRow>\r\n          </TableBody>\r\n          </Table>\r\n          <Table>\r\n            <TableHead>\r\n            <TableRow>\r\n                <TableCell>Ride</TableCell>\r\n                <TableCell align='right'># Of Maintenances</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {maintData.map(this.renderMaintData)}\r\n            </TableBody>\r\n          </Table>\r\n          <Table >\r\n          <TableBody className={classes.table}>\r\n            <TableRow>\r\n                <TableCell align=\"center\" style={{fontSize: 17, fontWeight: 700, background: '#DCDCDC'}}>Rainout Report</TableCell>\r\n              </TableRow>\r\n          </TableBody>\r\n          </Table>\r\n          <Table>\r\n            <TableHead>\r\n            <TableRow>\r\n                <TableCell>Date</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {rainData.map(this.renderRainoutData)}\r\n            </TableBody>\r\n          </Table>\r\n          </div>\r\n        </Paper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBetweenReport.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(BetweenReport);\r\n","import React, { Component } from 'react';\r\nimport TopBar from './components/TopBar';\r\nimport RideStatus from './components/RideStatus';\r\nimport SalesReport from './components/SalesReport';\r\nimport BetweenReport from './components/BetweenReport';\r\nimport './css/backg.css';\r\n\r\nclass Report extends Component {\r\n  \r\n  render() {\r\n    return(\r\n      <header className=\"headerb\">\r\n        <TopBar/>\r\n        <RideStatus/>\r\n        <div style={{height:10}}></div>\r\n        <SalesReport/>\r\n        <div style={{height:10}}></div>\r\n        <BetweenReport/>\r\n        <div style={{height:10}}></div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Report;","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Button } from '@material-ui/core';\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nfunction DeleteItemDialog(props){\r\n    return(\r\n        <div>\r\n            <Dialog\r\n                open={props.val.openDeleteItem}\r\n                onClose={props.close}\r\n                TransitionComponent={Transition}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                >\r\n                <DialogTitle id=\"scroll-dialog-title\" align = \"center\">\r\n                    {`Are you sure you want to delete ${props.item.Item_Name}?`}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n            <DialogActions align = \"center\">\r\n            <Grid container spacing = {16} justify = \"center\">\r\n            <Grid item xs = {6}>\r\n            <Button onClick={props.close} variant=\"outlined\" color=\"secondary\">Cancel</Button>\r\n            </Grid>\r\n            <Grid item xs = {6}>\r\n            <Button onClick={()=>props.confirm(props.item.Item_ID)} variant=\"outlined\" color=\"primary\">Confirm</Button>\r\n            </Grid>\r\n            </Grid>\r\n            </DialogActions>\r\n          </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteItemDialog","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { TextField} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\nfunction AddStandDialogue(props) {\r\n  return (\r\n    <div>\r\n        <Fab size=\"medium\" aria-label=\"Add-stand\" onClick = {props.open}>\r\n            <AddIcon />\r\n        </Fab>\r\n        <Dialog\r\n          open={props.val.openAddStand}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={props.handleCloseAddStand}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n          style={{textAlign: \"center\"}}\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            {\"New Stand Details\"}\r\n          </DialogTitle>\r\n          <DialogContent align = \"center\">\r\n          <Grid container spacing={24}>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField required id=\"standname\" label=\"Stand Name\" \r\n              name=\"standname\"\r\n              value={props.val.standname} \r\n              onChange={props.handleChange} fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField required id=\"hours\" label=\"Hours of Operation\"\r\n              name=\"hours\"\r\n               value={props.val.hours} \r\n               onChange={props.handleChange} fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n            <Button onClick={props.handleCloseAddStand} variant = \"outlined\" color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n            <Button onClick={props.submitStand} variant = \"outlined\" color=\"primary\">\r\n              Submit\r\n            </Button>\r\n            </Grid>\r\n          </Grid>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AddStandDialogue;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { TextField} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\nfunction AddItemDialog(props) {\r\n  return (\r\n    <div>\r\n        <Fab size=\"medium\" aria-label=\"Add-item\" onClick = {props.open}>\r\n            <AddIcon />\r\n        </Fab>\r\n        <Dialog\r\n          open={props.val.openAddItem}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={props.handleCloseAddItem}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n          style={{textAlign: \"center\"}}\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            {\"New Item Details\"}\r\n          </DialogTitle>\r\n          <DialogContent align = \"center\">\r\n          <Grid container spacing={24}>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField required id=\"itemname\" label=\"Item Name\" \r\n              name=\"itemname\"\r\n              value={props.val.itemname} \r\n              onChange={props.handleChange} fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField required id=\"price\" label=\"Item Price\"\r\n              name=\"price\"\r\n               value={props.val.price} \r\n               onChange={props.handleChange} fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n            <Button onClick={props.handleCloseAddItem} variant = \"outlined\" color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n            <Button onClick={props.submitItem} variant = \"outlined\" color=\"primary\">\r\n              Submit\r\n            </Button>\r\n            </Grid>\r\n          </Grid>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AddItemDialog;","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Button } from '@material-ui/core';\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nfunction DeleteItemDialog(props){\r\n    return(\r\n        <div>\r\n            <Dialog\r\n                open={props.val.openDeleteStand}\r\n                onClose={props.closeDelete}\r\n                TransitionComponent={Transition}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                >\r\n                <DialogTitle id=\"scroll-dialog-title\" align = \"center\">\r\n                    {`Are you sure you want to delete ${props.stand.Stand_Name}?`}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n            <DialogActions align = \"center\">\r\n            <Grid container spacing = {16} justify = \"center\">\r\n            <Grid item xs = {6}>\r\n            <Button onClick={props.closeDelete} variant=\"outlined\" color=\"secondary\">Cancel</Button>\r\n            </Grid>\r\n            <Grid item xs = {6}>\r\n            <Button onClick={()=>props.confirm(props.stand.Stand_ID)} variant=\"outlined\" color=\"primary\">Confirm</Button>\r\n            </Grid>\r\n            </Grid>\r\n            </DialogActions>\r\n          </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteItemDialog","import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos'\r\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Table, TableRow, TableCell,TableBody } from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n});\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nclass EditStandMenu extends Component\r\n{\r\n  state={\r\n    remselect: [],\r\n    addselect: [],\r\n  }\r\n  handleClickAdd = () =>{\r\n    console.log(this.state.addselect)\r\n    this.props.additems(this.props.val.stand.Stand_ID, this.state.addselect)\r\n    this.setState({addselect:[]})\r\n  }\r\n  handleClickRemove = () =>{\r\n    console.log(this.state.remselect)\r\n    this.props.remitems(this.props.val.stand.Stand_ID, this.state.remselect)\r\n    this.setState({remselect:[]})\r\n  }\r\n  handleClickMenu = (event, id) => {\r\n    const { remselect } = this.state;\r\n    const selectedIndex = remselect.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(remselect, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(remselect.slice(1));\r\n    } else if (selectedIndex === remselect.length - 1) {\r\n      newSelected = newSelected.concat(remselect.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        remselect.slice(0, selectedIndex),\r\n        remselect.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    this.setState({ remselect: newSelected });\r\n  };\r\n\r\n  handleClickOther = (event, id) => {\r\n    const { addselect } = this.state;\r\n    const selectedIndex = addselect.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(addselect, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(addselect.slice(1));\r\n    } else if (selectedIndex === addselect.length - 1) {\r\n      newSelected = newSelected.concat(addselect.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        addselect.slice(0, selectedIndex),\r\n        addselect.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    this.setState({ addselect: newSelected });\r\n  };\r\n  isSelectedMenu = id => this.state.remselect.indexOf(id) !== -1;\r\n  isSelectedOther = id => this.state.addselect.indexOf(id) !== -1;\r\n  render(){\r\n        return(\r\n        <div style={{textAlign: \"center\", width: '90%', margin: 'auto'}}>\r\n        <Dialog\r\n          open={this.props.val.openEditMenu}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={this.props.handleClose}\r\n          maxWidth='xl'\r\n          fullWidth={true}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n          style={{textAlign: \"center\"}}\r\n        >\r\n        <DialogContent>\r\n          <h3>{`Edit ${this.props.val.stand.Stand_Name} Menu`}</h3>\r\n          <br/>\r\n          <Grid container spacing = {8} direction = \"row\" justify=\"center\">\r\n            <Grid item xs = {4}>\r\n              <h5>Currently on Menu</h5>\r\n              <Table>\r\n                <TableBody>\r\n                  {this.props.val.items.map(item => {\r\n                      const isSelected = this.isSelectedMenu(item.Item_ID);\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          onClick={event => this.handleClickMenu(event, item.Item_ID)}\r\n                          role=\"checkbox\"\r\n                          aria-checked={isSelected}\r\n                          tabIndex={-1}\r\n                          key={item.Item_ID}\r\n                          selected={isSelected}\r\n                        >\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox checked={isSelected} />\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                            {item.Item_Name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">${item.Item_Price.toFixed(2)}</TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </Grid>\r\n            <Grid container item xs = {3} spacing={16} direction=\"column\" justify = \"center\" alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n            <IconButton onClick={()=>this.handleClickAdd()}>\r\n              <ArrowBackIos color = \"primary\"/>\r\n            </IconButton>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n            <IconButton onClick={()=>this.handleClickRemove()}>\r\n              <ArrowForwardIos color = \"primary\"/>\r\n            </IconButton>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Button onClick={this.props.handleClose} variant = \"outlined\" color = \"primary\">Done</Button>\r\n            </Grid>\r\n            </Grid>\r\n            <Grid item xs = {4}>\r\n            <h5>Not on Menu</h5>\r\n            <Table>\r\n                <TableBody>\r\n                  {this.props.val.other.map(item => {\r\n                      const isSelected = this.isSelectedOther(item.Item_ID);\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          onClick={event => this.handleClickOther(event, item.Item_ID)}\r\n                          role=\"checkbox\"\r\n                          aria-checked={isSelected}\r\n                          tabIndex={-1}\r\n                          key={item.Item_ID}\r\n                          selected={isSelected}\r\n                        >\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox checked={isSelected} />\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                            {item.Item_Name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">${item.Item_Price.toFixed(2)}</TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        </Dialog>\r\n        </div>\r\n    );}\r\n}\r\nexport default withStyles(styles)(EditStandMenu)","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Table, TableHead, TableRow, TableCell,TableBody } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport EditStandMenu from './EditStandMenu';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      flexBasis: '33.33%',\r\n      flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  });\r\n\r\nclass StandSettings extends Component\r\n{\r\n    state ={\r\n        stand: this.props.stand,\r\n        openEditMenu: false,\r\n        items: [],\r\n        other: [],\r\n    }\r\n  addToMenu = (sid, items) =>{\r\n      console.log(sid, items, 'stand settings');\r\n      fetch(`http://api.themepark.ga/addtomenu`,{\r\n          method: \"POST\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n              sid: sid,\r\n              list: items\r\n          }),\r\n      })\r\n      .then(()=>{\r\n        this.fetchmenu();\r\n        this.fetchother();\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n  removeFromMenu = (sid, items) =>{\r\n      console.log(sid, items, 'stand settings');\r\n      fetch(`http://api.themepark.ga/removefrommenu`,{\r\n          method: \"POST\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n              sid: sid,\r\n              list: items\r\n          }),\r\n      })\r\n      .then(()=>{\r\n        this.fetchmenu();\r\n        this.fetchother();\r\n    })\r\n      .catch(err => console.log(err))\r\n  }\r\n    handleOpenEditMenu = () => {\r\n      this.setState({openEditMenu: true });\r\n    };\r\n    handleCloseEditMenu = () =>\r\n    {\r\n      this.setState({openEditMenu: false, addselect: [], remselect: []})\r\n    };\r\n    componentDidMount()\r\n    {\r\n        this.fetchmenu()\r\n        this.fetchother()\r\n    }\r\n    fetchother(){\r\n      fetch(`http://api.themepark.ga/notonmenu/${this.state.stand.Stand_ID}`, {\r\n        method: \"GET\",\r\n      })\r\n        .then(res => res.json())\r\n        .then(result => this.setState({ other: result.itemList }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetchmenu(){\r\n        fetch(`http://api.themepark.ga/standmenu/${this.state.stand.Stand_ID}`, {\r\n          method: \"GET\",\r\n        })\r\n          .then(res => res.json())\r\n          .then(result => this.setState({ items: result.itemList }))\r\n          .catch(err => console.log(err))\r\n      }\r\n    \r\n    renderItems = ({ Item_ID, Item_Name, Item_Price }) =>\r\n    <TableRow key={Item_ID}>\r\n      <TableCell component=\"th\" scope=\"row\">\r\n          {Item_Name}\r\n      </TableCell>\r\n      <TableCell align=\"right\">${Item_Price.toFixed(2)}</TableCell>\r\n    </TableRow>\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n    return(\r\n        <React.Fragment>\r\n            <div style={{textAlign: \"center\", margin: 'auto', width: '90%'}}>\r\n                <Typography className={classes.secondaryHeading}>Menu</Typography>\r\n                <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                <TableCell>Item Name</TableCell>\r\n                <TableCell align = \"right\">Price</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.items.map(this.renderItems)}\r\n              </TableBody>\r\n            </Table>\r\n            <br/>\r\n            <Grid container spacing = {16} justify = \"center\">\r\n            <Grid item xs = {6}>\r\n            <Button variant=\"outlined\" color=\"primary\" \r\n              onClick={() => this.handleOpenEditMenu()}>Edit Menu</Button>\r\n            </Grid>\r\n            <Grid item xs = {6}>\r\n            <Button variant=\"outlined\" color=\"secondary\" onClick={()=>this.props.openDelete(this.state.stand)}>Remove Stand</Button>\r\n            </Grid>\r\n            </Grid>\r\n            <EditStandMenu val = {this.state} handleClose = {this.handleCloseEditMenu}\r\n                    handleChange={this.props.handleChange} renderItems={this.renderItems}\r\n                    additems = {this.addToMenu} remitems = {this.removeFromMenu}/>\r\n            </div>\r\n        </React.Fragment>\r\n    );}\r\n}\r\n\r\nexport default withStyles(styles)(StandSettings);","import  React, {Component} from 'react';\r\nimport TopBar from './components/TopBar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport { Paper, Table, TableHead, TableRow, TableCell,TableBody } from '@material-ui/core';\r\nimport DeleteItemDialog from './components/DeleteItemDialog';\r\nimport AddStandDialog from './components/AddStandDialog';\r\nimport AddItemDialog from './components/AddItemDialog';\r\nimport DeleteStand from './components/DeleteStand';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StandSettings from './components/StandSettings'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n});\r\n\r\nclass ManageStands extends Component{\r\n    state = {\r\n        clist: [],\r\n        items: [],\r\n        item: {},\r\n        stand: {},\r\n        itemname: \"\",\r\n        price: \"\",\r\n        standname: \"\",\r\n        hours: \"\",\r\n        openAddItem: false,\r\n        openAddStand: false,\r\n        openDeleteStand: false,\r\n        openDeleteItem: false,\r\n    }\r\n    handleChange = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n    submitItem = () =>{\r\n        fetch(`http://api.themepark.ga/additem`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.itemname,\r\n                price: this.state.price\r\n            }),\r\n        })\r\n        .then(()=>{\r\n            this.handleCloseAddItem();\r\n            this.fetchitems();\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    submitStand = () =>{\r\n        fetch(`http://api.themepark.ga/addstand`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.standname,\r\n                hours: this.state.hours\r\n            }),\r\n        })\r\n        .then(()=>{\r\n            this.handleCloseAddStand();\r\n            this.fetchstands();\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    handleDeleteStand = (sid) =>{\r\n        fetch(`http://api.themepark.ga/deletestand`,{\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                id: sid,\r\n            }),\r\n        })\r\n        .then(()=>{\r\n            this.handleCloseDeleteStand();\r\n            this.fetchstands();\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    handleDeleteItem = (itemid) =>{\r\n        fetch(`http://api.themepark.ga/deleteitem`,{\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                id: itemid,\r\n            }),\r\n        })\r\n        .then(()=>{\r\n            this.handleCloseDeleteItem();\r\n            this.fetchitems();\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    handleOpenAddItem = () => {\r\n        this.setState({ openAddItem: true });\r\n    };\r\n    handleCloseAddItem = () =>\r\n    {\r\n        this.setState({openAddItem: false, itemname: \"\", price: \"\"})\r\n    };\r\n    handleOpenAddStand = () => {\r\n        this.setState({ openAddStand: true });\r\n    };\r\n    handleCloseAddStand = () =>\r\n    {\r\n        this.setState({openAddStand: false, standname: \"\", hours: \"\"})\r\n    };\r\n    handleOpenDeleteStand = (standv) => {\r\n        this.setState({ stand: standv, openDeleteStand: true });\r\n    };\r\n    handleCloseDeleteStand = () =>\r\n    {\r\n        this.setState({openDeleteStand: false})\r\n    };\r\n    handleOpenDeleteItem = (itemv) => {\r\n        this.setState({ item: itemv, openDeleteItem: true });\r\n    };\r\n    handleCloseDeleteItem = () => {\r\n        this.setState({ openDeleteItem: false });\r\n    };\r\n    fetchitems(){\r\n        fetch(`http://api.themepark.ga/itemlist`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ items: result.itemList }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    fetchstands(){\r\n        fetch(`http://api.themepark.ga/concessionlist`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ clist: result.diningList }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    renderclist = ({Stand_ID, Stand_Name, Hours_of_operations}) =>\r\n    <ExpansionPanel key = {Stand_ID}>\r\n        <ExpansionPanelSummary expandIcon= {<ExpandMoreIcon/>}>\r\n            <Typography className={this.props.classes.heading}>{Stand_Name}</Typography>\r\n            <Typography className={this.props.classes.secondaryHeading}>{Hours_of_operations}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n            <StandSettings stand={{Stand_ID, Stand_Name,Hours_of_operations}} \r\n                val={this.state} openDelete={this.handleOpenDeleteStand}\r\n                 handleChange={this.handleChange}/>\r\n        </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n\r\n    renderItems = ({ Item_ID, Item_Name, Item_Price }) =>\r\n      <TableRow key={Item_ID}>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n            {Item_Name}\r\n        </TableCell>\r\n        <TableCell align=\"right\">${Item_Price.toFixed(2)}</TableCell>\r\n        <TableCell align=\"right\">\r\n        <IconButton onClick={()=>this.handleOpenDeleteItem({ Item_ID, Item_Name, Item_Price })}>\r\n                <DeleteIcon fontSize=\"small\" />\r\n        </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n    \r\n    componentDidMount(){\r\n        this.fetchstands()\r\n        this.fetchitems()\r\n    }\r\n    render(){\r\n        const {clist} = this.state\r\n        return(\r\n            <React.Fragment>\r\n                <TopBar/>\r\n                <br/>\r\n                <div style={{textAlign: \"center\", margin: 'auto'}}>\r\n                    <h2 style={{color: 'Black'}} className=\"scantitles\">Manage Concessions</h2>\r\n                <br/>\r\n                <Grid container spacing = {32} justify = \"center\">\r\n                <Grid item sm = {5}>\r\n                <Paper>\r\n                    <br/>\r\n                    <h4>Concession Stands</h4>\r\n                    {clist.map(this.renderclist)}\r\n                </Paper>\r\n                <br/>\r\n                <AddStandDialog val = {this.state} handleCloseAddStand = {this.handleCloseAddStand} \r\n                    handleChange ={this.handleChange} submitStand = {this.submitStand} open = {this.handleOpenAddStand}/>\r\n                </Grid>\r\n                <Grid item sm = {5}>\r\n                <Paper>\r\n                    <br/>\r\n                    <div style={{textAlign: \"center\", width: '90%', margin: 'auto'}}>\r\n                        <h4>Concession Items</h4>\r\n                        <Table>\r\n                        <TableHead>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.items.map(this.renderItems)}\r\n                        </TableBody>\r\n                        </Table>\r\n                        <DeleteItemDialog val={this.state} item={this.state.item} close={this.handleCloseDeleteItem} confirm={this.handleDeleteItem}/>\r\n                        <DeleteStand val={this.state} stand={this.state.stand} closeDelete={this.handleCloseDeleteStand} confirm={this.handleDeleteStand}/>\r\n                        <br/>\r\n                    </div>\r\n                </Paper>\r\n                <br/>\r\n                <AddItemDialog val = {this.state} handleCloseAddItem = {this.handleCloseAddItem} \r\n                    handleChange ={this.handleChange} submitItem = {this.submitItem} open = {this.handleOpenAddItem}/>\r\n                </Grid>\r\n                </Grid> \r\n                </div>\r\n            </React.Fragment>\r\n    );}\r\n}\r\nexport default withStyles(styles)(ManageStands)","import React, { Component } from 'react';\r\nimport TopBar from './components/TopBar';\r\nimport { Button, Paper} from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nclass ChangePassword extends Component{\r\n    state = {\r\n        userID: localStorage.getItem('userID'),\r\n        Password: \"\",\r\n        NewPassword: \"\",\r\n        CheckPassword: \"\",\r\n        output:\"\",\r\n    };\r\nhandleChangedPassword(){\r\n        localStorage.clear();\r\n        this.setState({userID: null});\r\n        window.location.replace('/login');\r\n    }\r\nhandlePassword = text =>{\r\n    this.setState({ Password: text.target.value });\r\n}\r\nhandleNewPassword = text =>{\r\n    this.setState({ NewPassword: text.target.value });\r\n}\r\nhandleCheckPassword = text =>{\r\n    this.setState({ CheckPassword: text.target.value });\r\n}\r\nhandlecomparePassword(){\r\n    if(this.state.NewPassword===this.state.CheckPassword){\r\n        this.ChangePassword();\r\n    }else{\r\n        this.setState({output: 7})\r\n    }\r\n}\r\noutput(){\r\n    if(this.state.output === 7){\r\n       return <center><text><font color=\"red\">New Password dose not match Check Password</font></text></center>\r\n    }else if(this.state.output === 0){\r\n       return <center><text><font color=\"red\">Original Password is incorrect</font></text></center>\r\n    }\r\n}\r\nChangePassword(){\r\n\r\n    fetch('http://api.themepark.ga/changePassword',{\r\n                method: 'POST',\r\n                headers:{\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                body:JSON.stringify({\r\n                    userID: this.state.userID,\r\n                    password: this.state.Password,\r\n                    newPassword: this.state.NewPassword\r\n                })\r\n           }).then(res => res.json())\r\n           .then(result => {\r\n                this.setState({output: result.status});\r\n                    })\r\n           .catch(err => console.log(err))\r\n\r\n}\r\nrender() {\r\n    if(this.state.output===1){\r\n        this.handleChangedPassword();\r\n    }\r\n      return (\r\n          <div className= \"AccountSettings\">\r\n          <TopBar/>\r\n          <div style={{textAlign: \"center\", paddingTop: 100}}>\r\n          <h2 style={{color: 'Black'}}>Change Password</h2>\r\n          </div>\r\n          <Paper style={{margin: 'auto', width: '400px'}}>\r\n          <div style={{textAlign: \"center\", paddingTop: '50px', paddingBottom: '50px'}}>\r\n                <center><FormControl margin=\"normal\" required >\r\n                  <InputLabel htmlFor=\"Password\" >Old Password</InputLabel>\r\n                  <Input id=\"Password\" name=\"Password\" type=\"Password\" autoComplete=\"Password ID\" autoFocus onChange={this.handlePassword} value={this.state.Password}/>\r\n                </FormControl></center>\r\n                <center><FormControl margin=\"normal\" required >\r\n                   <InputLabel htmlFor=\"Password\">New Password</InputLabel>\r\n                    <Input name=\"NewPassword\" type=\"Password\" id=\"NewPassword\" onChange={this.handleNewPassword} value={this.state.NewPassword}/>\r\n                </FormControl></center>\r\n                <center><FormControl margin=\"normal\" required >\r\n                   <InputLabel htmlFor=\"Password\">Check Password</InputLabel>\r\n                    <Input name=\"CheckPassword\" type=\"Password\" id=\"CheckPassword\" onChange={this.handleCheckPassword} value={this.state.CheckPassword}/>\r\n                </FormControl></center>\r\n            <center><Button onClick={()=>this.handlecomparePassword()}>Change Password</Button></center>\r\n            {this.output()}\r\n             </div>\r\n             </Paper>\r\n          </div>\r\n     );\r\n }\r\n    \r\n    \r\n}\r\nexport default ChangePassword;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TopBar from './components/TopBar';\r\nimport { DatePicker, MuiPickersUtilsProvider } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport { TextField, MenuItem, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button, TablePagination} from '@material-ui/core';\r\n\r\nconst actionsStyles = theme => ({\r\n    root: {\r\n      flexShrink: 0,\r\n      color: theme.palette.text.secondary,\r\n      marginLeft: theme.spacing.unit * 2.5,\r\n    },\r\n  });\r\n\r\nclass TablePaginationActions extends React.Component {\r\n    handleFirstPageButtonClick = event => {\r\n      this.props.onChangePage(event, 0);\r\n    };\r\n  \r\n    handleBackButtonClick = event => {\r\n      this.props.onChangePage(event, this.props.page - 1);\r\n    };\r\n  \r\n    handleNextButtonClick = event => {\r\n      this.props.onChangePage(event, this.props.page + 1);\r\n    };\r\n  \r\n    handleLastPageButtonClick = event => {\r\n      this.props.onChangePage(\r\n        event,\r\n        Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\r\n      );\r\n    };\r\n  \r\n    render() {\r\n      const { classes, count, page, rowsPerPage, theme } = this.props;\r\n  \r\n      return (\r\n        <div className={classes.root}>\r\n          <IconButton\r\n            onClick={this.handleFirstPageButtonClick}\r\n            disabled={page === 0}\r\n            aria-label=\"First Page\"\r\n          >\r\n            {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={this.handleBackButtonClick}\r\n            disabled={page === 0}\r\n            aria-label=\"Previous Page\"\r\n          >\r\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={this.handleNextButtonClick}\r\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n            aria-label=\"Next Page\"\r\n          >\r\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={this.handleLastPageButtonClick}\r\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n            aria-label=\"Last Page\"\r\n          >\r\n            {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n          </IconButton>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  TablePaginationActions.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  const TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\r\n    TablePaginationActions,\r\n  );\r\nclass MaintenanceReports extends Component{\r\n    state={\r\n        toDate: null,\r\n        fromDate: null,\r\n        rideList: [],\r\n        mList: [],\r\n        selectedRide: \"all\",\r\n        page: 0,\r\n        rowsPerPage: 20,\r\n    }\r\n    fixDate(date){\r\n        if(date.getDate() < 10){\r\n          return \"0\" + date.getDate();\r\n        }\r\n        else{\r\n          return date.getDate();\r\n        }\r\n      }\r\n    handleChange = event => {\r\n        this.setState({[event.target.name]: event.target.value}, () =>\r\n        {\r\n            this.fetchmaintenance(this.state.toDate,this.state.fromDate, this.state.selectedRide)\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        this.fetchrides();\r\n        this.fetchmaintenance(this.state.toDate, this.state.fromDate, this.state.selectedRide);\r\n    }\r\n    fixMonth(date){\r\n        if(date.getMonth()+1 < 10){\r\n            return \"0\" + (date.getMonth() +1);\r\n        }\r\n        else{\r\n            return date.getMonth() + 1;\r\n        }\r\n    }\r\n    fetchmaintenance(t, f, id){\r\n        var tdate = t;\r\n        var fdate = f;\r\n        if(this.state.toDate !== null)\r\n        {\r\n            tdate = t.getFullYear()+\"-\"+this.fixMonth(t)+\"-\"+this.fixDate(t);\r\n        }\r\n        if(this.state.fromDate !== null)\r\n        {\r\n            fdate = f.getFullYear()+\"-\"+this.fixMonth(f)+\"-\"+this.fixDate(f);\r\n        }\r\n        fetch(`http://api.themepark.ga/ridemaintenancebetween`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                rideid: id,\r\n                to: tdate,\r\n                from: fdate,\r\n            }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => this.setState({ mList: result.maintlist }))\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetchrides()\r\n    {\r\n        fetch(`http://api.themepark.ga/ridelist`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => this.setState({ rideList: result.rideList }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    renderlist({OrderID, RideID, RideName, DateCreated, DateCompleted, Maintenance_Desc, issuedByF, issuedByL, completedByF, completedByL})\r\n    {\r\n        if(DateCompleted !== null)\r\n        {\r\n        return(\r\n        <TableRow key={OrderID}>\r\n            <TableCell>{RideName}</TableCell>\r\n            <TableCell align=\"right\">{DateCreated.split(\".\")[0]}</TableCell>\r\n            <TableCell align=\"right\">{DateCompleted.split(\".\")[0]}</TableCell>\r\n            <TableCell align=\"right\">{issuedByF + \" \" + issuedByL}</TableCell>\r\n            <TableCell align=\"right\">{completedByF + \" \" + completedByL}</TableCell>\r\n            <TableCell align=\"right\">{Maintenance_Desc}</TableCell>\r\n        </TableRow>\r\n        )}\r\n        else if (DateCompleted === null)\r\n        {\r\n            return(\r\n            <TableRow key={OrderID} style={{backgroundColor: \"#ffdbdb\"}}>\r\n                <TableCell>{RideName}</TableCell>\r\n                <TableCell align=\"right\">{DateCreated.split(\".\")[0]}</TableCell>\r\n                <TableCell align=\"right\">N/A</TableCell>\r\n                <TableCell align=\"right\">{issuedByF + \" \" + issuedByL}</TableCell>\r\n                <TableCell align=\"right\">N/A</TableCell>\r\n                <TableCell align=\"right\">{Maintenance_Desc}</TableCell>\r\n            </TableRow>\r\n            )\r\n        }\r\n    }\r\n    clearDates=()=>{\r\n        this.setState({toDate: null, fromDate: null}, () => {\r\n            this.fetchmaintenance(this.state.toDate, this.state.fromDate, this.state.selectedRide)\r\n        })\r\n    }\r\n    handleChangeDate= (name,event) => {\r\n        this.setState({[name] : event}, () => {\r\n            this.fetchmaintenance(this.state.toDate,this.state.fromDate, this.state.selectedRide)\r\n    })}\r\n    handleChangePage = (event, page) => {\r\n        this.setState({ page });\r\n      };\r\n    \r\n      handleChangeRowsPerPage = event => {\r\n        this.setState({ page: 0, rowsPerPage: event.target.value });\r\n      };\r\n    render(){\r\n        const{mList, page, rowsPerPage} = this.state\r\n        return(\r\n            <div>\r\n           <TopBar/>\r\n            <div style={{textAlign: \"center\", paddingTop: 50}}>\r\n                <h2>Maintenance History</h2>\r\n                <Grid container spacing = {32} justify = \"center\" alignItems = \"center\">\r\n                <TextField select label=\"Ride\" name=\"selectedRide\" onChange={this.handleChange} value={this.state.selectedRide} style={{width: 200}}>\r\n                <MenuItem key = {0} value = {'all'}/>\r\n                {this.state.rideList.map(option => (\r\n                    <MenuItem key={option.RideID} value={option.RideID}>\r\n                    {option.RideName}\r\n                    </MenuItem>\r\n                    )\r\n                )}\r\n                </TextField>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                  <DatePicker style={{margin: 20}}\r\n                  required\r\n                  label=\"From:\"\r\n                  value={this.state.fromDate}\r\n                  onChange={e => this.handleChangeDate(\"fromDate\", e)}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                  <DatePicker style={{margin: 20}}\r\n                  required\r\n                  label=\"To:\"\r\n                  value={this.state.toDate}\r\n                  onChange={e => this.handleChangeDate(\"toDate\",e)}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n                <Button variant = \"outlined\" onClick={this.clearDates}>Clear Dates</Button>\r\n                </Grid>\r\n                <br/>\r\n                <Paper style={{width:'90%', margin: 'auto'}}>\r\n                    <Table>\r\n                        <TableHead style={{backgroundColor: \"#2F4F4F\"}}>\r\n                            <TableRow style={{color: \"white\"}}>\r\n                                <TableCell style={{color: \"white\", fontSize: 15}}>Ride Name</TableCell>\r\n                                <TableCell style={{color: \"white\", fontSize: 15}} align = \"right\">Date Issued</TableCell>\r\n                                <TableCell style={{color: \"white\", fontSize: 15}} align = \"right\">Date Completed</TableCell>\r\n                                <TableCell style={{color: \"white\", fontSize: 15}} align = \"right\">Issued By</TableCell>\r\n                                <TableCell style={{color: \"white\", fontSize: 15}} align = \"right\">Completed By</TableCell>\r\n                                <TableCell style={{color: \"white\", fontSize: 15}} align = \"right\">Description</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {mList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(this.renderlist)}\r\n                        </TableBody>\r\n                    </Table>\r\n                    <TablePagination\r\n                    rowsPerPageOptions={[10, 20, 50]}\r\n                    component=\"div\"\r\n                    count={this.state.mList.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    backIconButtonProps={{\r\n                        'aria-label': 'Previous Page',\r\n                    }}\r\n                    nextIconButtonProps={{\r\n                        'aria-label': 'Next Page',\r\n                    }}\r\n                    onChangePage={this.handleChangePage}\r\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActionsWrapped}\r\n                    />\r\n                </Paper>\r\n                <br/>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MaintenanceReports;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Home from './pages/Home';\r\nimport Ticket from './pages/Ticket';\r\nimport Rides from './pages/Riding';\r\nimport Dining from './pages/Dining';\r\nimport EntranceScan from './pages/EntranceScan';\r\nimport ScanRides from './pages/ScanRides';\r\nimport Maintenance from './pages/Maintenance';\r\nimport CreateRide from './pages/CreateRide';\r\nimport { Route } from \"react-router-dom\";\r\nimport Department from './pages/Department';\r\nimport Login from './pages/Login';\r\nimport Analytics from './pages/Analytics';\r\nimport AccountSettings from './pages/AccountSettings';\r\nimport ParkReport from './pages/ParkReport';\r\nimport ManageStands from './pages/ManageStands';\r\nimport ChangePassword from './pages/ChangePassword';\r\nimport MaintenanceReports from './pages/MaintenanceReports';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/park-tickets\" exact component={Ticket} />\r\n        <Route path=\"/rides\" exact component={Rides} />\r\n        <Route path=\"/dining\" exact component={Dining} />\r\n        <Route path=\"/entrance-scan\" exact component={EntranceScan} />\r\n        <Route path=\"/scan-rides\" exact component={ScanRides} />\r\n        <Route path=\"/maintenance\" exact component={Maintenance} />\r\n        <Route path=\"/new-ride\" exact component={CreateRide} />\r\n        <Route path=\"/department\" exact component={Department} />\r\n        <Route path=\"/login\" exact component={Login}/>\r\n        <Route path=\"/riding\" exact component={Rides}/>\r\n        <Route path=\"/analytics\" exact component={Analytics}/>\r\n        <Route path=\"/AccountSettings\" extact component={AccountSettings}/>\r\n        <Route path=\"/parkreport\" exact component={ParkReport}/>\r\n        <Route path=\"/manage-stands\" exact component={ManageStands}/>\r\n        <Route path=\"/ChangePassword\" exact component={ChangePassword}/>\r\n        <Route path=\"/maintenancereports\" exact component={MaintenanceReports}/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}